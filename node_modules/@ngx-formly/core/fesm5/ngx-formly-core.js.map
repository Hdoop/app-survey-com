{"version":3,"file":"ngx-formly-core.js.map","sources":["ng://@ngx-formly/core/lib/utils.ts","ng://@ngx-formly/core/lib/services/formly.config.ts","ng://@ngx-formly/core/lib/services/formly.form.builder.ts","ng://@ngx-formly/core/lib/components/formly.form.ts","ng://@ngx-formly/core/lib/components/formly.field.ts","ng://@ngx-formly/core/lib/components/formly.attributes.ts","ng://@ngx-formly/core/lib/templates/field.type.ts","ng://@ngx-formly/core/lib/extensions/field-form/utils.ts","ng://@ngx-formly/core/lib/templates/field-array.type.ts","ng://@ngx-formly/core/lib/templates/field.wrapper.ts","ng://@ngx-formly/core/lib/templates/formly.group.ts","ng://@ngx-formly/core/lib/templates/formly.validation-message.ts","ng://@ngx-formly/core/lib/templates/field-template.type.ts","ng://@ngx-formly/core/lib/extensions/field-expression/utils.ts","ng://@ngx-formly/core/lib/extensions/field-expression/field-expression.ts","ng://@ngx-formly/core/lib/extensions/field-validation/field-validation.ts","ng://@ngx-formly/core/lib/extensions/field-form/field-form.ts","ng://@ngx-formly/core/lib/extensions/core/core.ts","ng://@ngx-formly/core/lib/core.module.ts"],"sourcesContent":["import { FormlyFieldConfig } from './core';\nimport { Observable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { FormlyFieldConfigCache } from './components/formly.field.config';\n\nexport function getFieldId(formId: string, field: FormlyFieldConfig, index: string|number) {\n  if (field.id) return field.id;\n  let type = field.type;\n  if (!type && field.template) type = 'template';\n  return [formId, type, field.key, index].join('_');\n}\n\nexport function getKeyPath(field: FormlyFieldConfigCache): string[] {\n  if (!field.key) {\n    return [];\n  }\n\n  /* We store the keyPath in the field for performance reasons. This function will be called frequently. */\n  if (!field._keyPath || field._keyPath.key !== field.key) {\n    const key = field.key.indexOf('[') === -1\n      ? field.key\n      : field.key.replace(/\\[(\\w+)\\]/g, '.$1');\n\n    field._keyPath = { key: field.key, path: key.indexOf('.') !== -1 ? key.split('.') : [key] };\n  }\n\n  return field._keyPath.path.slice(0);\n}\n\nexport const FORMLY_VALIDATORS = ['required', 'pattern', 'minLength', 'maxLength', 'min', 'max'];\n\nexport function assignModelValue(model: any, paths: string[], value: any) {\n  for (let i = 0; i < (paths.length - 1); i++) {\n    const path = paths[i];\n    if (!model[path] || !isObject(model[path])) {\n      model[path] = /^\\d+$/.test(paths[i + 1]) ? [] : {};\n    }\n\n    model = model[path];\n  }\n\n  model[paths[paths.length - 1]] = clone(value);\n}\n\nexport function getFieldValue(field: FormlyFieldConfig): any {\n  let model = field.parent.model;\n  for (const path of getKeyPath(field)) {\n    if (!model) {\n      return model;\n    }\n    model = model[path];\n  }\n\n  return model;\n}\n\nexport function reverseDeepMerge(dest: any, ...args: any[]) {\n  args.forEach(src => {\n    for (let srcArg in src) {\n      if (isNullOrUndefined(dest[srcArg]) || isBlankString(dest[srcArg])) {\n        dest[srcArg] = clone(src[srcArg]);\n      } else if (objAndSameType(dest[srcArg], src[srcArg])) {\n        reverseDeepMerge(dest[srcArg], src[srcArg]);\n      }\n    }\n  });\n  return dest;\n}\n\nexport function isNullOrUndefined(value: any) {\n  return value === undefined || value === null;\n}\n\nexport function isUndefined(value: any) {\n  return value === undefined;\n}\n\nexport function isBlankString(value: any) {\n  return value === '';\n}\n\nexport function isFunction(value: any) {\n  return typeof(value) === 'function';\n}\n\nexport function objAndSameType(obj1: any, obj2: any) {\n  return isObject(obj1) && isObject(obj2)\n    && Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2)\n    && !(Array.isArray(obj1) || Array.isArray(obj2));\n}\n\nexport function isObject(x: any) {\n  return x != null && typeof x === 'object';\n}\n\nexport function isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nexport function clone(value: any): any {\n  if (!isObject(value) || value instanceof RegExp || value instanceof Observable || /* instanceof SafeHtmlImpl */ value.changingThisBreaksApplicationSecurity) {\n    return value;\n  }\n\n  if (value instanceof AbstractControl) {\n    return null;\n  }\n\n  if (value instanceof Date) {\n    return new Date(value.getTime());\n  }\n\n  if (Array.isArray(value)) {\n    return value.slice(0).map(v => clone(v));\n  }\n\n  // best way to clone a js object maybe\n  // https://stackoverflow.com/questions/41474986/how-to-clone-a-javascript-es6-class-instance\n  const proto = Object.getPrototypeOf(value);\n  let c = Object.create(proto);\n  c = Object.setPrototypeOf(c, proto);\n  // need to make a deep copy so we dont use Object.assign\n  // also Object.assign wont copy property descriptor exactly\n  return Object.keys(value).reduce((newVal, prop) => {\n    const propDescriptor = Object.getOwnPropertyDescriptor(value, prop);\n\n    if (propDescriptor.get) {\n      Object.defineProperty(newVal, prop, { ...propDescriptor, get: () => clone(value[prop]) });\n    } else {\n      newVal[prop] = clone(value[prop]);\n    }\n\n    return newVal;\n  }, c);\n}\n\nexport function defineHiddenProp(field: any, prop: string, defaultValue: any) {\n  Object.defineProperty(field, prop, { enumerable: false, writable: true, configurable: true });\n  field[prop] = defaultValue;\n}\n\nexport function wrapProperty<T = any>(field, prop, setFn: (newVal: T, oldVal?: T) => void) {\n  let value = field[prop];\n  setFn(value);\n\n  Object.defineProperty(field, prop, {\n    configurable: true,\n    get: () => value,\n    set: newVal => {\n      if (newVal !== value) {\n        setFn(newVal, value);\n        value = newVal;\n      }\n    },\n  });\n}\n","import { Injectable, InjectionToken, ComponentRef, ComponentFactoryResolver, Injector } from '@angular/core';\nimport { ValidationErrors, AbstractControl } from '@angular/forms';\nimport { FieldType } from './../templates/field.type';\nimport { reverseDeepMerge, defineHiddenProp } from './../utils';\nimport { FormlyFieldConfig, FormlyFieldConfigCache } from '../components/formly.field.config';\n\nexport const FORMLY_CONFIG = new InjectionToken<FormlyConfig>('FORMLY_CONFIG');\n\n/** @experimental */\nexport interface FormlyExtension {\n  prePopulate?(field: FormlyFieldConfig): void;\n  onPopulate?(field: FormlyFieldConfig): void;\n  postPopulate?(field: FormlyFieldConfig): void;\n}\n\n/**\n * Maintains list of formly field directive types. This can be used to register new field templates.\n */\n@Injectable({ providedIn: 'root' })\nexport class FormlyConfig {\n  types: {[name: string]: TypeOption} = {};\n  validators: { [name: string]: ValidatorOption } = {};\n  wrappers: { [name: string]: WrapperOption } = {};\n  messages: { [name: string]: string | ((error: any, field: FormlyFieldConfig) => string); } = {};\n  templateManipulators: {\n    preWrapper: ManipulatorWrapper[];\n    postWrapper: ManipulatorWrapper[];\n  } = {\n    preWrapper: [],\n    postWrapper: [],\n  };\n  extras: ConfigOption['extras'] = {\n    checkExpressionOn: 'changeDetectionCheck',\n    showError: function(field: FieldType) {\n      return field.formControl && field.formControl.invalid && (field.formControl.touched || (field.options.parentForm && field.options.parentForm.submitted) || (field.field.validation && field.field.validation.show));\n    },\n  };\n  extensions: { [name: string]: FormlyExtension } = {};\n\n  addConfig(config: ConfigOption) {\n    if (config.types) {\n      config.types.forEach(type => this.setType(type));\n    }\n    if (config.validators) {\n      config.validators.forEach(validator => this.setValidator(validator));\n    }\n    if (config.wrappers) {\n      config.wrappers.forEach(wrapper => this.setWrapper(wrapper));\n    }\n    if (config.manipulators) {\n      console.warn(`NgxFormly: passing 'manipulators' config is deprecated, use custom extension instead.`);\n      config.manipulators.forEach(manipulator => this.setManipulator(manipulator));\n    }\n    if (config.validationMessages) {\n      config.validationMessages.forEach(validation => this.addValidatorMessage(validation.name, validation.message));\n    }\n    if (config.extensions) {\n      config.extensions.forEach(c => this.extensions[c.name] = c.extension);\n    }\n    if (config.extras) {\n      this.extras = { ...this.extras, ...config.extras };\n    }\n  }\n\n  setType(options: TypeOption | TypeOption[]) {\n    if (Array.isArray(options)) {\n      options.forEach((option) => this.setType(option));\n    } else {\n      if (!this.types[options.name]) {\n        this.types[options.name] = <TypeOption>{};\n      }\n      this.types[options.name].component = options.component;\n      this.types[options.name].name = options.name;\n      this.types[options.name].extends = options.extends;\n      this.types[options.name].defaultOptions = options.defaultOptions;\n      if (options.wrappers) {\n        options.wrappers.forEach((wrapper) => this.setTypeWrapper(options.name, wrapper));\n      }\n    }\n  }\n\n  getType(name: string): TypeOption {\n    if (!this.types[name]) {\n      throw new Error(`[Formly Error] There is no type by the name of \"${name}\"`);\n    }\n\n    this.mergeExtendedType(name);\n\n    return this.types[name];\n  }\n\n  getMergedField(field: FormlyFieldConfig = {}): any {\n    const type = this.getType(field.type);\n    if (type.defaultOptions) {\n      reverseDeepMerge(field, type.defaultOptions);\n    }\n\n    const extendDefaults = type.extends && this.getType(type.extends).defaultOptions;\n    if (extendDefaults) {\n      reverseDeepMerge(field, extendDefaults);\n    }\n\n    if (field && field.optionsTypes) {\n      field.optionsTypes.forEach(option => {\n        const defaultOptions = this.getType(option).defaultOptions;\n        if (defaultOptions) {\n          reverseDeepMerge(field, defaultOptions);\n        }\n      });\n    }\n\n    const componentRef = this.createComponent(field);\n    if (componentRef && componentRef.instance && componentRef.instance.defaultOptions) {\n      reverseDeepMerge(field, componentRef.instance.defaultOptions);\n    }\n\n    if (!field.wrappers && type.wrappers) {\n      field.wrappers = [...type.wrappers];\n    }\n  }\n\n  /** @internal */\n  createComponent(\n    field: FormlyFieldConfigCache = {},\n    resolver?: ComponentFactoryResolver,\n    injector?: Injector,\n  ): ComponentRef<FieldType> {\n    if (!field.type) {\n      return;\n    }\n\n    const cf = field._componentFactory;\n    if (cf && field.type === cf.type && (cf.componentRef && cf.componentRef.hostView && !cf.componentRef.hostView.destroyed)) {\n      return field._componentFactory.componentRef;\n    }\n\n    const type = this.getType(field.type);\n    if (!resolver) {\n      resolver = field.parent.options._componentFactoryResolver;\n    }\n    if (!injector) {\n      injector = this.getFieldInjector(field);\n    }\n\n    defineHiddenProp(field, '_componentFactory', {\n      type: field.type,\n      component: type.component,\n      componentRef: resolver\n        ? resolver.resolveComponentFactory(type.component).create(injector)\n        : null,\n    });\n\n    return field._componentFactory.componentRef;\n  }\n\n  setWrapper(options: WrapperOption) {\n    this.wrappers[options.name] = options;\n    if (options.types) {\n      options.types.forEach((type) => {\n        this.setTypeWrapper(type, options.name);\n      });\n    }\n  }\n\n  getWrapper(name: string): WrapperOption {\n    if (!this.wrappers[name]) {\n      throw new Error(`[Formly Error] There is no wrapper by the name of \"${name}\"`);\n    }\n\n    return this.wrappers[name];\n  }\n\n  setTypeWrapper(type: string, name: string) {\n    if (!this.types[type]) {\n      this.types[type] = <TypeOption>{};\n    }\n    if (!this.types[type].wrappers) {\n      this.types[type].wrappers = [];\n    }\n    if (this.types[type].wrappers.indexOf(name) === -1) {\n      this.types[type].wrappers.push(name);\n    }\n  }\n\n  setValidator(options: ValidatorOption) {\n    this.validators[options.name] = options;\n  }\n\n  getValidator(name: string): ValidatorOption {\n    if (!this.validators[name]) {\n      throw new Error(`[Formly Error] There is no validator by the name of \"${name}\"`);\n    }\n\n    return this.validators[name];\n  }\n\n  addValidatorMessage(name: string, message: string | ((error: any, field: FormlyFieldConfig) => string)) {\n    this.messages[name] = message;\n  }\n\n  getValidatorMessage(name: string) {\n    return this.messages[name];\n  }\n\n  setManipulator(manipulator: ManipulatorOption) {\n    new manipulator.class()[manipulator.method](this);\n  }\n\n  private mergeExtendedType(name: string) {\n    if (!this.types[name].extends) {\n      return;\n    }\n\n    const extendedType = this.getType(this.types[name].extends);\n    if (!this.types[name].component) {\n      this.types[name].component = extendedType.component;\n    }\n\n    if (!this.types[name].wrappers) {\n      this.types[name].wrappers = extendedType.wrappers;\n    }\n  }\n\n  private getFieldInjector(field: FormlyFieldConfigCache = {}) {\n    const parent = field.parent;\n    if (parent._componentFactory && parent._componentFactory.componentRef) {\n      return parent._componentFactory.componentRef.injector;\n    }\n\n    return parent.options._injector;\n  }\n}\nexport interface TypeOption {\n  name: string;\n  component?: any;\n  wrappers?: string[];\n  extends?: string;\n  defaultOptions?: FormlyFieldConfig;\n}\n\nexport interface WrapperOption {\n  name: string;\n  component: any;\n  types?: string[];\n}\n\nexport interface FieldValidatorFn {\n  (c: AbstractControl, field: FormlyFieldConfig): ValidationErrors | null;\n}\n\nexport interface ValidatorOption {\n  name: string;\n  validation: FieldValidatorFn;\n}\n\nexport interface ExtensionOption {\n  name: string;\n  extension: FormlyExtension;\n}\n\nexport interface ValidationMessageOption {\n  name: string;\n  message: string | ((error: any, field: FormlyFieldConfig) => string);\n}\n\nexport interface ManipulatorOption {\n  class?: { new (): any };\n  method?: string;\n}\n\nexport interface ManipulatorWrapper {\n  (f: FormlyFieldConfig): string;\n}\n\nexport interface TemplateManipulators {\n  preWrapper?: ManipulatorWrapper[];\n  postWrapper?: ManipulatorWrapper[];\n}\n\nexport interface ConfigOption {\n  types?: TypeOption[];\n  wrappers?: WrapperOption[];\n  validators?: ValidatorOption[];\n  extensions?: ExtensionOption[];\n  validationMessages?: ValidationMessageOption[];\n\n  /** @deprecated use `extensions` instead */\n  manipulators?: ManipulatorOption[];\n  extras?: {\n    /** @deprecated use `extensions` instead */\n    fieldTransform?: any,\n    immutable?: boolean,\n    showError?: (field: FieldType) => boolean;\n\n    /**\n     * Defines the option which formly rely on to check field expression properties.\n     * - `modelChange`: perform a check when the value of the form control changes.\n     * - `changeDetectionCheck`: triggers an immediate check when `ngDoCheck` is called.\n    */\n    checkExpressionOn?: 'modelChange' | 'changeDetectionCheck',\n  };\n}\n","import { Injectable, ComponentFactoryResolver, Injector } from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { FormlyConfig } from './formly.config';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFieldConfigCache, FormlyValueChangeEvent, FormlyFormOptionsCache } from '../components/formly.field.config';\nimport { Subject } from 'rxjs';\nimport { defineHiddenProp } from '../utils';\n\n@Injectable({ providedIn: 'root' })\nexport class FormlyFormBuilder {\n  constructor(\n    private formlyConfig: FormlyConfig,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector,\n  ) {}\n\n  buildForm(formControl: FormGroup | FormArray, fieldGroup: FormlyFieldConfig[] = [], model: any, options: FormlyFormOptions) {\n    if (!this.formlyConfig.extensions.core) {\n      throw new Error('NgxFormly: missing `forRoot()` call. use `forRoot()` when registering the `FormlyModule`.');\n    }\n\n    this._buildForm({ fieldGroup, model, formControl, options: this._setOptions(options) });\n  }\n\n  private _buildForm(field: FormlyFieldConfigCache) {\n    this.getExtensions().forEach(extension => extension.prePopulate && extension.prePopulate(field));\n    this.getExtensions().forEach(extension => extension.onPopulate && extension.onPopulate(field));\n\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((f) => this._buildForm(f));\n    }\n\n    this.getExtensions().forEach(extension => extension.postPopulate && extension.postPopulate(field));\n  }\n\n  private getExtensions() {\n    return Object.keys(this.formlyConfig.extensions).map(name => this.formlyConfig.extensions[name]);\n  }\n\n  private _setOptions(options: FormlyFormOptionsCache) {\n    options = options || {};\n    options.formState = options.formState || {};\n\n    if (!options.showError) {\n      options.showError = this.formlyConfig.extras.showError;\n    }\n\n    if (!options.fieldChanges) {\n      defineHiddenProp(options, 'fieldChanges', new Subject<FormlyValueChangeEvent>());\n    }\n\n    if (!options._componentFactoryResolver) {\n      defineHiddenProp(options, '_componentFactoryResolver', this.componentFactoryResolver);\n    }\n\n    if (!options._injector) {\n      defineHiddenProp(options, '_injector', this.injector);\n    }\n\n    if (!options._markForCheck) {\n      options._markForCheck = (field) => {\n        if (field._componentRefs) {\n          field._componentRefs.forEach(ref => ref.changeDetectorRef.markForCheck());\n        }\n\n        if (field.fieldGroup) {\n          field.fieldGroup.forEach(f => options._markForCheck(f));\n        }\n      };\n    }\n\n    return options;\n  }\n}\n","import { Component, DoCheck, OnChanges, Input, SimpleChanges, Optional, EventEmitter, Output, OnDestroy, Attribute } from '@angular/core';\nimport { FormGroup, FormArray, FormGroupDirective } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFormOptionsCache } from './formly.field.config';\nimport { FormlyFormBuilder } from '../services/formly.form.builder';\nimport { FormlyConfig } from '../services/formly.config';\nimport { assignModelValue, isNullOrUndefined, wrapProperty, clone, defineHiddenProp } from '../utils';\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\n@Component({\n  selector: 'formly-form',\n  template: `\n    <formly-field *ngFor=\"let field of fields\"\n      hide-deprecation\n      [form]=\"field.form\"\n      [options]=\"field.options\"\n      [model]=\"field.model\"\n      [field]=\"field\">\n    </formly-field>\n    <ng-content></ng-content>\n  `,\n  providers: [FormlyFormBuilder],\n})\nexport class FormlyForm implements DoCheck, OnChanges, OnDestroy {\n  @Input() form: FormGroup | FormArray;\n\n  @Input()\n  set model(model: any) { this._model = this.immutable ? clone(model) : model; }\n  get model() { return this._model || {}; }\n\n  @Input()\n  set fields(fields: FormlyFieldConfig[]) { this._fields = this.immutable ? clone(fields) : fields; }\n  get fields() { return this._fields || []; }\n\n  @Input()\n  set options(options: FormlyFormOptions) { this._options = this.immutable ? clone(options) : options; }\n  get options() { return this._options; }\n\n  @Output() modelChange = new EventEmitter<any>();\n\n  private immutable = false;\n  private _model: any;\n  private _fields: FormlyFieldConfig[];\n  private _options: FormlyFormOptions;\n  private initialModel: any;\n  private modelChangeSubs: Subscription[] = [];\n\n  private enableCheckExprDebounce = false;\n  private checkExpressionChange$ = this.modelChange.pipe(\n    debounceTime(this.enableCheckExprDebounce ? 100 : 0),\n  ).subscribe(() => {\n    this.enableCheckExprDebounce = true;\n    this.checkExpressionChange();\n    this.enableCheckExprDebounce = false;\n  });\n\n  constructor(\n    private formlyBuilder: FormlyFormBuilder,\n    private formlyConfig: FormlyConfig,\n    // tslint:disable-next-line\n    @Attribute('immutable') immutable,\n    @Optional() private parentFormGroup: FormGroupDirective,\n  ) {\n    this.immutable = (immutable !== null) || !!formlyConfig.extras.immutable;\n  }\n\n  ngDoCheck() {\n    if (this.formlyConfig.extras.checkExpressionOn === 'changeDetectionCheck') {\n      this.checkExpressionChange();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.fields || changes.form || changes.model) {\n      this.form = this.form || (new FormGroup({}));\n      this.setOptions();\n      this.clearModelSubscriptions();\n      this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options);\n      this.trackModelChanges(this.fields);\n      this.options.updateInitialValue();\n    }\n  }\n\n  ngOnDestroy() {\n    this.clearModelSubscriptions();\n    this.checkExpressionChange$.unsubscribe();\n  }\n\n  changeModel(event: { key: string, value: any }) {\n    assignModelValue(this.model, event.key.split('.'), event.value);\n    this.modelChange.emit(clone(this.model));\n  }\n\n  setOptions() {\n    if (!this.options) {\n      this.options = {};\n    }\n\n    if (!this.options.resetModel) {\n      this.options.resetModel = (model ?: any) => {\n        model = isNullOrUndefined(model) ? this.initialModel : model;\n        if (this.model) {\n          Object.keys(this.model).forEach(k => delete this.model[k]);\n          Object.assign(this.model, model || {});\n        }\n\n        (<FormlyFormOptionsCache> this.options)._buildForm();\n\n        // we should call `NgForm::resetForm` to ensure changing `submitted` state after resetting form\n        // but only when the current component is a root one.\n        if (this.options.parentForm && this.options.parentForm.control === this.form) {\n          this.options.parentForm.resetForm(model);\n        } else {\n          this.form.reset(model);\n        }\n      };\n    }\n\n    if (!this.options.parentForm && this.parentFormGroup) {\n      defineHiddenProp(this.options, 'parentForm', this.parentFormGroup);\n      wrapProperty(this.options.parentForm, 'submitted', (newVal, oldVal) => {\n        if (newVal !== !!oldVal) {\n          (<FormlyFormOptionsCache> this.options)._markForCheck({\n            fieldGroup: this.fields,\n            model: this.model,\n            formControl: this.form,\n            options: this.options,\n          });\n        }\n      });\n    }\n\n    if (!this.options.updateInitialValue) {\n      this.options.updateInitialValue = () => this.initialModel = clone(this.model);\n    }\n\n    if (!(<FormlyFormOptionsCache> this.options)._buildForm) {\n      (<FormlyFormOptionsCache> this.options)._buildForm = (emitModelChange = false) => {\n        this.clearModelSubscriptions();\n        this.formlyBuilder.buildForm(this.form, this.fields, this.model, this.options);\n        this.trackModelChanges(this.fields);\n\n        if (emitModelChange) {\n          this.modelChange.emit(clone(this.model));\n        }\n      };\n    }\n  }\n\n  private checkExpressionChange() {\n    if (this.options && (<FormlyFormOptionsCache> this.options)._checkField) {\n      (<FormlyFormOptionsCache> this.options)._checkField({\n        fieldGroup: this.fields,\n        model: this.model,\n        formControl: this.form,\n        options: this.options,\n      });\n    }\n  }\n\n  private trackModelChanges(fields: FormlyFieldConfig[], rootKey: string[] = []) {\n    fields.forEach(field => {\n      if (field.key && !field.fieldGroup) {\n        const valueChanges = field.modelOptions.debounce && field.modelOptions.debounce.default\n          ? field.formControl.valueChanges.pipe(debounceTime(field.modelOptions.debounce.default))\n          : field.formControl.valueChanges;\n\n        this.modelChangeSubs.push(valueChanges.subscribe(value => {\n          if (field.parsers && field.parsers.length > 0) {\n            field.parsers.forEach(parserFn => value = parserFn(value));\n          }\n\n          this.changeModel({ key: [...rootKey, field.key].join('.'), value });\n        }));\n      }\n\n      if (field.fieldGroup && field.fieldGroup.length > 0) {\n        this.trackModelChanges(field.fieldGroup, field.key ? [...rootKey, field.key] : rootKey);\n      }\n    });\n  }\n\n  private clearModelSubscriptions() {\n    this.modelChangeSubs.forEach(sub => sub.unsubscribe());\n    this.modelChangeSubs = [];\n  }\n}\n","import {\n  Component, EventEmitter, Input, Output, Type,\n  ViewContainerRef, ViewChild, ComponentRef, SimpleChanges, Attribute, ComponentFactoryResolver,\n  OnInit, OnChanges, OnDestroy, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, Injector,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyConfig } from '../services/formly.config';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFieldConfigCache } from './formly.field.config';\nimport { defineHiddenProp } from '../utils';\nimport { FieldWrapper } from '../templates/field.wrapper';\nimport { FieldType } from '../templates/field.type';\n\n@Component({\n  selector: 'formly-field',\n  template: `<ng-template #container></ng-template>`,\n  host: {\n    '[style.display]': 'field.hide ? \"none\":\"\"',\n    '[class]': 'field.className? field.className : className',\n  },\n})\nexport class FormlyField implements OnInit, OnChanges, DoCheck, AfterContentInit, AfterContentChecked, AfterViewInit, AfterViewChecked, OnDestroy {\n  @Input() field: FormlyFieldConfig;\n  @Input('class') className: string = '';\n\n  warnDeprecation = false;\n\n  @Input() set model(m: any) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Input() set form(form: FormGroup) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Input() set options(options: FormlyFormOptions) {\n    this.warnDeprecation && console.warn(`NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`);\n  }\n\n  @Output() modelChange: EventEmitter<any> = new EventEmitter();\n  // TODO: remove `any`, once dropping angular `V7` support.\n  @ViewChild('container', <any> {read: ViewContainerRef, static: true }) containerRef: ViewContainerRef;\n\n  refsUnsubscribe = () => {};\n\n  constructor(\n    private formlyConfig: FormlyConfig,\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private injector: Injector,\n    // tslint:disable-next-line\n    @Attribute('hide-deprecation') hideDeprecation,\n  ) {\n    this.warnDeprecation = hideDeprecation === null;\n  }\n\n  ngAfterContentInit() {\n    this.triggerHook('afterContentInit');\n  }\n\n  ngAfterContentChecked() {\n    this.triggerHook('afterContentChecked');\n  }\n\n  ngAfterViewInit() {\n    this.triggerHook('afterViewInit');\n  }\n\n  ngAfterViewChecked() {\n    this.triggerHook('afterViewChecked');\n  }\n\n  ngDoCheck() {\n    this.triggerHook('doCheck');\n  }\n\n  ngOnInit() {\n    this.triggerHook('onInit');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field) {\n      this.refsUnsubscribe = this.renderField(this.field, this.containerRef);\n    }\n\n    this.triggerHook('onChanges', changes);\n  }\n\n  ngOnDestroy() {\n    this.triggerHook('onDestroy');\n    this.refsUnsubscribe();\n  }\n\n  private renderField(f: FormlyFieldConfigCache, containerRef: ViewContainerRef) {\n    this.refsUnsubscribe();\n    (f.wrappers || []).forEach(wrapper => {\n      containerRef = this.createWrapperRef(f, containerRef, this.formlyConfig.getWrapper(wrapper));\n    });\n\n    const ref = this.formlyConfig.createComponent(f, this.componentFactoryResolver, this.injector);\n    if (ref) {\n      containerRef.insert(ref.hostView);\n      this.attachComponentRef(ref, f);\n    }\n\n    return () => {\n      (f._componentRefs || []).forEach(componentRef => componentRef.destroy());\n      f._componentRefs = [];\n    };\n  }\n\n  private triggerHook(name: string, changes?: SimpleChanges) {\n    if (this.field.hooks && this.field.hooks[name]) {\n      if (!changes || changes.field) {\n        this.field.hooks[name](this.field);\n      }\n    }\n\n    if (this.field.lifecycle && this.field.lifecycle[name]) {\n      this.field.lifecycle[name](\n        this.field.form,\n        this.field,\n        this.field.model,\n        this.field.options,\n      );\n    }\n  }\n\n  private createWrapperRef<T extends FieldWrapper>(\n    field: FormlyFieldConfigCache,\n    containerRef: ViewContainerRef,\n    config: { component: Type<T>; },\n  ) {\n    const cfr = field.options && field.options._componentFactoryResolver\n      ? field.options._componentFactoryResolver\n      : this.componentFactoryResolver;\n\n    const ref = containerRef.createComponent<T>(cfr.resolveComponentFactory(config.component));\n    this.attachComponentRef(ref, field);\n\n    if (!ref.instance.fieldComponent) {\n      throw Error(`${config.component.prototype.constructor.name}#fieldComponent: missing 'static' flag for '@ViewChild' query, it should be explicitly defined by '@ViewChild(..., { static: true })'.`);\n    }\n\n    return ref.instance.fieldComponent;\n  }\n\n  private attachComponentRef<T extends FieldType>(ref: ComponentRef<T>, field: FormlyFieldConfigCache) {\n    if (field._componentRefs) {\n      field._componentRefs.push(ref);\n    } else {\n      defineHiddenProp(field, '_componentRefs', [ref]);\n    }\n    Object.assign(ref.instance, { field });\n  }\n}\n","import { Directive, ElementRef, Input, OnChanges, SimpleChanges, Renderer2, DoCheck, Inject, OnDestroy } from '@angular/core';\nimport { FormlyFieldConfig, FormlyTemplateOptions } from './formly.field.config';\nimport { wrapProperty, defineHiddenProp, FORMLY_VALIDATORS } from '../utils';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  selector: '[formlyAttributes]',\n  host: {\n    '[attr.name]': 'field.name',\n    '[attr.step]': 'to.step',\n\n    '(focus)': 'onFocus($event)',\n    '(blur)': 'onBlur($event)',\n    '(keyup)': 'to.keyup && to.keyup(field, $event)',\n    '(keydown)': 'to.keydown && to.keydown(field, $event)',\n    '(click)': 'to.click && to.click(field, $event)',\n    '(change)': 'onChange($event)',\n    '(keypress)': 'to.keypress && to.keypress(field, $event)',\n  },\n})\nexport class FormlyAttributes implements OnChanges, DoCheck, OnDestroy {\n  @Input('formlyAttributes') field: FormlyFieldConfig;\n\n  private document: Document;\n  private uiAttributesCache: any = {};\n  private uiAttributes = [\n    ...FORMLY_VALIDATORS,\n    'tabindex',\n    'placeholder',\n    'readonly',\n    'disabled',\n  ];\n\n  get to(): FormlyTemplateOptions { return this.field.templateOptions || {}; }\n\n  private get fieldAttrElements() { return (this.field && this.field['_attrElements']) || []; }\n\n  constructor(\n    private renderer: Renderer2,\n    private elementRef: ElementRef,\n    @Inject(DOCUMENT) _document: any,\n  ) {\n    this.document = _document;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field) {\n      this.renderer.setAttribute(this.elementRef.nativeElement, 'id', this.field.id);\n      if (this.to && this.to.attributes) {\n        wrapProperty(this.to, 'attributes', (newVal, oldValue) => {\n          if (oldValue) {\n            Object.keys(oldValue).forEach(attr => this.renderer.removeAttribute(this.elementRef.nativeElement, attr));\n          }\n\n          if (newVal) {\n            Object.keys(newVal).forEach(attr => this.setAttribute(attr, newVal[attr]));\n          }\n        });\n      }\n\n      this.attachAttrElement();\n      if (this.fieldAttrElements.length === 1) {\n        wrapProperty(this.field, 'focus', (value) => {\n          const element = this.fieldAttrElements ? this.fieldAttrElements[0] : null;\n          if (!element) {\n            return;\n          }\n\n          this.focusElement(element, value);\n        });\n      }\n    }\n  }\n\n  /**\n   * We need to re-evaluate all the attributes on every change detection cycle, because\n   * by using a HostBinding we run into certain edge cases. This means that whatever logic\n   * is in here has to be super lean or we risk seriously damaging or destroying the performance.\n   *\n   * Formly issue: https://github.com/ngx-formly/ngx-formly/issues/1317\n   * Material issue: https://github.com/angular/material2/issues/14024\n   */\n  ngDoCheck() {\n    this.uiAttributes.forEach(attr => {\n      const value = this.to[attr];\n      if (this.uiAttributesCache[attr] !== value) {\n        this.uiAttributesCache[attr] = value;\n        if (value || value === 0) {\n          this.setAttribute(attr, value === true ? attr : `${value}`);\n        } else {\n          this.renderer.removeAttribute(this.elementRef.nativeElement, attr);\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.detachAttrElement();\n  }\n\n  focusElement(element, value: boolean) {\n    if (!element.focus) {\n      return;\n    }\n\n    const isFocused = !!this.document.activeElement\n      && this.fieldAttrElements\n        .some(element => this.document.activeElement === element || element.contains(this.document.activeElement));\n\n    if (value && !isFocused) {\n      element.focus();\n    } else if (!value && isFocused) {\n      element.blur();\n    }\n  }\n\n  onFocus($event: any) {\n    if (!this.field.focus) {\n      this.field.focus = true;\n    }\n\n    if (this.to.focus) {\n      this.to.focus(this.field, $event);\n    }\n  }\n\n  onBlur($event: any) {\n    if (this.field.focus) {\n      this.field.focus = false;\n    }\n\n    if (this.to.blur) {\n      this.to.blur(this.field, $event);\n    }\n  }\n\n  onChange($event: any) {\n    if (this.to.change) {\n      this.to.change(this.field, $event);\n    }\n\n    if (this.field.formControl) {\n      this.field.formControl.markAsDirty();\n    }\n  }\n\n  private attachAttrElement() {\n    if (this.field['_attrElements']) {\n      this.field['_attrElements'].push(this.elementRef.nativeElement);\n    } else {\n      defineHiddenProp(this.field, '_attrElements', [this.elementRef.nativeElement]);\n    }\n  }\n\n  private detachAttrElement() {\n    const index = this.fieldAttrElements.findIndex(element => element !== this.elementRef.nativeElement);\n    if (index !== -1) {\n      this.field['_attrElements'].splice(index, 1);\n    }\n  }\n\n  private setAttribute(attr: string, value: string) {\n    this.renderer.setAttribute(this.elementRef.nativeElement, attr, value);\n  }\n}\n","import { Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\n\nexport abstract class FieldType<F extends FormlyFieldConfig = FormlyFieldConfig> {\n  @Input() field: F;\n  defaultOptions?: F;\n\n  @Input()\n  get model() { return this.field.model; }\n  set model(m: any) { console.warn(`NgxFormly: passing 'model' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  @Input()\n  get form() { return <FormGroup> this.field.parent.formControl; }\n  set form(form) { console.warn(`NgxFormly: passing 'form' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  @Input()\n  get options() { return this.field.options; }\n  set options(options: F['options']) { console.warn(`NgxFormly: passing 'options' input to '${this.constructor.name}' component is not required anymore, you may remove it!`); }\n\n  get key() { return this.field.key; }\n\n  get formControl() { return this.field.formControl; }\n\n  get to() { return this.field.templateOptions || {}; }\n\n  get showError(): boolean { return this.options.showError(this); }\n\n  get id(): string { return this.field.id; }\n\n  get formState() { return this.options.formState || {}; }\n}\n\n/**\n * @deprecated use `FieldType` instead\n */\nexport abstract class Field extends FieldType {\n  constructor() {\n    super();\n    console.warn(`NgxFormly: 'Field' has been renamed to 'FieldType', extend 'FieldType' instead.`);\n  }\n}\n","import { FormArray, FormGroup, FormControl } from '@angular/forms';\nimport { FormlyFieldConfig } from '../../core';\nimport { getKeyPath, getFieldValue, isNullOrUndefined, defineHiddenProp } from '../../utils';\n\nexport function unregisterControl(field: FormlyFieldConfig) {\n  const form = field.formControl.parent as FormArray | FormGroup;\n  if (form instanceof FormArray) {\n    const key = form.controls.findIndex(c => c === field.formControl);\n    if (key !== -1) {\n      form.removeAt(key);\n      field.formControl.setParent(null);\n    }\n  } else if (form instanceof FormGroup) {\n    const paths = getKeyPath(field);\n    const key = paths[paths.length - 1];\n    if (form.get([key]) === field.formControl) {\n      form.removeControl(key);\n    }\n    field.formControl.setParent(null);\n  }\n}\n\nexport function registerControl(field: FormlyFieldConfig, control?: any) {\n  control = control || field.formControl;\n  if (!field.formControl && control) {\n    defineHiddenProp(field, 'formControl', control);\n    if (field.templateOptions.disabled && control.enabled) {\n      control.disable();\n    }\n\n    if (delete field.templateOptions.disabled) {\n      Object.defineProperty(field.templateOptions, 'disabled', {\n        get: () => !field.formControl.enabled,\n        set: (value: boolean) => value ? field.formControl.disable() : field.formControl.enable(),\n        enumerable: true,\n        configurable: true,\n      });\n    }\n  }\n\n  let parent = field.parent.formControl as FormGroup;\n  if (!parent) {\n    return;\n  }\n\n  const paths = getKeyPath(field);\n  for (let i = 0; i < (paths.length - 1); i++) {\n    const path = paths[i];\n    if (!parent.get([path])) {\n      registerControl({\n        key: path,\n        formControl: new FormGroup({}),\n        parent: { formControl: parent },\n      });\n    }\n\n    parent = <FormGroup> parent.get([path]);\n  }\n\n  const value = getFieldValue(field);\n  if (\n    !(isNullOrUndefined(control.value) && isNullOrUndefined(value))\n    && control.value !== value\n    && control instanceof FormControl\n  ) {\n    control.patchValue(value);\n  }\n  const key = paths[paths.length - 1];\n  if (parent.get([key]) !== control) {\n    parent.setControl(key, control);\n  }\n}\n","import { Inject, Optional } from '@angular/core';\nimport { FormArray } from '@angular/forms';\nimport { FieldType } from './field.type';\nimport { clone, isNullOrUndefined } from '../utils';\nimport { FormlyFormBuilder } from '../services/formly.form.builder';\nimport { FormlyFieldConfig, FormlyFieldConfigCache } from '../components/formly.field.config';\nimport { FORMLY_CONFIG, FormlyExtension } from '../services/formly.config';\nimport { registerControl } from '../extensions/field-form/utils';\n\nexport abstract class FieldArrayType<F extends FormlyFieldConfig = FormlyFieldConfig> extends FieldType<F> implements FormlyExtension {\n  formControl: FormArray;\n  defaultOptions: any = {\n    defaultValue: [],\n  };\n\n  constructor(@Inject(FORMLY_CONFIG) @Optional() builder?: FormlyFormBuilder) {\n    super();\n\n    if (builder instanceof FormlyFormBuilder) {\n      console.warn(`NgxFormly: passing 'FormlyFormBuilder' to '${this.constructor.name}' type is not required anymore, you may remove it!`);\n    }\n  }\n\n  onPopulate(field: FormlyFieldConfig) {\n    field.fieldGroup = field.fieldGroup || [];\n    if (field.fieldGroup.length > field.model.length) {\n      for (let i = field.fieldGroup.length; i >= field.model.length; --i) {\n        (field.formControl as FormArray).removeAt(i);\n        field.fieldGroup.splice(i, 1);\n      }\n    }\n\n    for (let i = field.fieldGroup.length; i < field.model.length; i++) {\n      const f = { ...clone(field.fieldArray), key: `${i}` };\n      field.fieldGroup.push(f);\n    }\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    if (field.formControl) {\n      return;\n    }\n\n    registerControl(field, new FormArray(\n      field.fieldGroup.map(f => f.formControl),\n      {\n        validators: field._validators,\n        asyncValidators: field._asyncValidators,\n        updateOn: field.modelOptions.updateOn,\n      },\n    ));\n  }\n\n  add(i?: number, initialModel?: any) {\n    i = isNullOrUndefined(i) ? this.field.fieldGroup.length : i;\n    this.model.splice(i, 0, initialModel ? clone(initialModel) : undefined);\n\n    (<any> this.options)._buildForm(true);\n  }\n\n  remove(i: number) {\n    this.model.splice(i, 1);\n    this.formControl.removeAt(i);\n    this.field.fieldGroup.splice(i, 1);\n    this.field.fieldGroup.forEach((f, key) => f.key = `${key}`);\n\n    (<any> this.options)._buildForm(true);\n  }\n}\n","import { ViewContainerRef, ViewChild } from '@angular/core';\nimport { FieldType } from './field.type';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\n\nexport abstract class FieldWrapper<F extends FormlyFieldConfig = FormlyFieldConfig> extends FieldType<F> {\n  // TODO: remove `any`, once dropping angular `V7` support.\n  @ViewChild('fieldComponent', <any>{ read: ViewContainerRef, static: true }) fieldComponent: ViewContainerRef;\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from './field.type';\n\n@Component({\n  selector: 'formly-group',\n  template: `\n    <formly-field *ngFor=\"let f of field.fieldGroup\" [field]=\"f\"></formly-field>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class]': 'field.fieldGroupClassName || \"\"',\n  },\n})\nexport class FormlyGroup extends FieldType {\n  defaultOptions = {\n    defaultValue: {},\n  };\n}\n","import { Component, Input } from '@angular/core';\nimport { FormlyConfig } from '../services/formly.config';\nimport { FormlyFieldConfig } from '../components/formly.field.config';\nimport { isObject } from '../utils';\n\n@Component({\n  selector: 'formly-validation-message',\n  template: `{{ errorMessage }}`,\n})\nexport class FormlyValidationMessage {\n  @Input() field: FormlyFieldConfig;\n\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  get errorMessage(): string {\n    const fieldForm = this.field.formControl;\n    for (let error in fieldForm.errors) {\n      if (fieldForm.errors.hasOwnProperty(error)) {\n        let message: string | Function = this.formlyConfig.getValidatorMessage(error);\n\n        if (isObject(fieldForm.errors[error])) {\n          if (fieldForm.errors[error].errorPath) {\n            return;\n          }\n\n          if (fieldForm.errors[error].message) {\n            message = fieldForm.errors[error].message;\n          }\n        }\n\n        if (this.field.validation && this.field.validation.messages && this.field.validation.messages[error]) {\n          message = this.field.validation.messages[error];\n        }\n\n        if (this.field.validators && this.field.validators[error] && this.field.validators[error].message) {\n          message = this.field.validators[error].message;\n        }\n\n        if (this.field.asyncValidators && this.field.asyncValidators[error] && this.field.asyncValidators[error].message) {\n          message = this.field.asyncValidators[error].message;\n        }\n\n        if (typeof message === 'function') {\n          return message(fieldForm.errors[error], this.field);\n        }\n\n        return message;\n      }\n    }\n  }\n}\n","import { Component } from '@angular/core';\nimport { FieldType } from './field.type';\n\n@Component({\n  selector: 'formly-template',\n  template: `<div [innerHtml]=\"field.template\"></div>`,\n})\nexport class FormlyTemplateType extends FieldType {}\n","export function evalStringExpression(expression: string, argNames: string[]) {\n  try {\n    if (expression.indexOf('this.field') !== -1) {\n      console.warn(`NgxFormly: using 'this.field' in expressionProperties is deprecated since v5.1, use 'field' instead.`);\n    }\n\n    return Function(...argNames, `return ${expression};`) as any;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpressionValueSetter(expression: string, argNames: string[]) {\n  try {\n    return Function(...argNames, `${expression} = expressionValue;`) as (value: any) => void;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpression(expression: string | Function | boolean, thisArg: any, argVal: any[]): any {\n  if (expression instanceof Function) {\n    return expression.apply(thisArg, argVal);\n  } else {\n    return expression ? true : false;\n  }\n}\n","import { FormlyFieldConfig, FormlyValueChangeEvent, FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { isObject, isNullOrUndefined, isFunction, FORMLY_VALIDATORS, defineHiddenProp } from '../../utils';\nimport { evalExpression, evalStringExpression, evalExpressionValueSetter } from './utils';\nimport { Observable } from 'rxjs';\nimport { FormlyExtension } from '../../services/formly.config';\nimport { unregisterControl, registerControl } from '../field-form/utils';\n\n/** @experimental */\nexport class FieldExpressionExtension implements FormlyExtension {\n  prePopulate(field: FormlyFieldConfigCache) {\n    if (field.parent || field.options._checkField) {\n      return;\n    }\n\n    field.options._checkField = (f, ignoreCache) => this._checkField(f, ignoreCache);\n  }\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    if (!field.parent || field._expressionProperties) {\n      return;\n    }\n\n    // cache built expression\n    defineHiddenProp(field, '_expressionProperties', {});\n\n    if (field.expressionProperties) {\n      for (const key in field.expressionProperties) {\n        const expressionProperty = field.expressionProperties[key],\n          expressionValueSetter = evalExpressionValueSetter(\n            `field.${key}`,\n            ['expressionValue', 'model', 'field'],\n          );\n\n        if (typeof expressionProperty === 'string' || isFunction(expressionProperty)) {\n          field._expressionProperties[key] = {\n            expression: this._evalExpression(\n              expressionProperty,\n              field.parent.expressionProperties && field.parent.expressionProperties.hasOwnProperty('templateOptions.disabled')\n                ? () => field.parent.templateOptions.disabled\n                : undefined,\n            ),\n            expressionValueSetter,\n          };\n          if (key === 'templateOptions.disabled') {\n            Object.defineProperty(field._expressionProperties[key], 'expressionValue', {\n              get: () => field.templateOptions.disabled,\n              set: () => { },\n              enumerable: true,\n              configurable: true,\n            });\n          }\n        } else if (expressionProperty instanceof Observable) {\n          const subscription = (expressionProperty as Observable<any>)\n            .subscribe(v => evalExpression(expressionValueSetter, { field }, [v, field.model, field]));\n\n          const onDestroy = field.hooks.onDestroy;\n          field.hooks.onDestroy = (field) => {\n            onDestroy && onDestroy(field);\n            subscription.unsubscribe();\n          };\n        }\n      }\n    }\n\n    if (field.hideExpression) {\n      // delete hide value in order to force re-evaluate it in FormlyFormExpression.\n      delete field.hide;\n\n      let parent = field.parent;\n      while (parent && !parent.hideExpression) {\n        parent = parent.parent;\n      }\n\n      field.hideExpression = this._evalExpression(\n        field.hideExpression,\n        parent && parent.hideExpression ? () => parent.hide : undefined,\n      );\n    }\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    if (field.parent) {\n      return;\n    }\n\n    field.options._checkField(field, true);\n  }\n\n  private _evalExpression(expression, parentExpression?) {\n    expression = expression || (() => false);\n    if (typeof expression === 'string') {\n      expression = evalStringExpression(expression, ['model', 'formState', 'field']);\n    }\n\n    return parentExpression\n      ? (model: any, formState: any, field: FormlyFieldConfig) => parentExpression() || expression(model, formState, field)\n      : expression;\n  }\n\n  private _checkField(field: FormlyFieldConfigCache, ignoreCache = false) {\n    let markForCheck = false;\n    field.fieldGroup.forEach(f => {\n      this.checkFieldExpressionChange(f, ignoreCache) && (markForCheck = true);\n      this.checkFieldVisibilityChange(f, ignoreCache) && (markForCheck = true);\n\n      if (f.fieldGroup && f.fieldGroup.length > 0) {\n        this._checkField(f, ignoreCache);\n      }\n    });\n\n    if (markForCheck && field.options && field.options._markForCheck) {\n      field.options._markForCheck(field);\n    }\n  }\n\n  private checkFieldExpressionChange(field: FormlyFieldConfigCache, ignoreCache): boolean {\n    if (!field || !field._expressionProperties) {\n      return false;\n    }\n\n    let markForCheck = false;\n    const expressionProperties = field._expressionProperties;\n    const validators = FORMLY_VALIDATORS.map(v => `templateOptions.${v}`);\n\n    for (const key in expressionProperties) {\n      let expressionValue = evalExpression(expressionProperties[key].expression, { field }, [field.model, field.options.formState, field]);\n      if (key === 'templateOptions.disabled') {\n        expressionValue = !!expressionValue;\n      }\n\n      if (\n        ignoreCache || (\n          expressionProperties[key].expressionValue !== expressionValue\n          && (!isObject(expressionValue) || JSON.stringify(expressionValue) !== JSON.stringify(expressionProperties[key].expressionValue))\n        )\n      ) {\n        markForCheck = true;\n        expressionProperties[key].expressionValue = expressionValue;\n        evalExpression(\n          expressionProperties[key].expressionValueSetter,\n          { field },\n          [expressionValue, field.model, field],\n        );\n\n        if (key.indexOf('model.') === 0) {\n          const path = key.replace(/^model\\./, ''),\n            control = field.key && key === path ? field.formControl : field.parent.formControl.get(path);\n\n          if (\n            control\n            && !(isNullOrUndefined(control.value) && isNullOrUndefined(expressionValue))\n            && control.value !== expressionValue\n          ) {\n            control.patchValue(expressionValue);\n          }\n        }\n\n        if (validators.indexOf(key) !== -1 && field.formControl) {\n          field.formControl.updateValueAndValidity({ emitEvent: false });\n        }\n      }\n    }\n\n    return markForCheck;\n  }\n\n  private checkFieldVisibilityChange(field: FormlyFieldConfigCache, ignoreCache): boolean {\n    if (!field || isNullOrUndefined(field.hideExpression)) {\n      return false;\n    }\n\n    const hideExpressionResult: boolean = !!evalExpression(\n      field.hideExpression,\n      { field },\n      [field.model, field.options.formState, field],\n    );\n    let markForCheck = false;\n    if (hideExpressionResult !== field.hide || ignoreCache) {\n      markForCheck = true;\n      // toggle hide\n      field.hide = hideExpressionResult;\n      field.templateOptions.hidden = hideExpressionResult;\n      this.toggleFormControl(field, hideExpressionResult);\n    }\n\n    return markForCheck;\n  }\n\n  private toggleFormControl(field: FormlyFieldConfig, hide: boolean) {\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter(f => !f.hideExpression)\n        .forEach(f => this.toggleFormControl(f, hide));\n    }\n\n    if (field.formControl && field.key) {\n      if (hide === true && field.formControl.parent) {\n        unregisterControl(field);\n      } else if (hide === false && !field.formControl.parent) {\n        registerControl(field);\n      }\n    }\n\n    if (field.options.fieldChanges) {\n      field.options.fieldChanges.next(<FormlyValueChangeEvent> { field: field, type: 'hidden', value: hide });\n    }\n  }\n}\n","import { FormlyExtension, FieldValidatorFn, FormlyConfig } from '../../services/formly.config';\nimport { FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { isObject, FORMLY_VALIDATORS, defineHiddenProp, isUndefined, isPromise } from '../../utils';\n\n/** @experimental */\nexport class FieldValidationExtension implements FormlyExtension {\n  constructor(private formlyConfig: FormlyConfig) {}\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    if (!field.parent || !field.key) {\n      return;\n    }\n\n    this.initFieldValidation(field, 'validators');\n    this.initFieldValidation(field, 'asyncValidators');\n  }\n\n  private initFieldValidation(field: FormlyFieldConfigCache, type: 'validators' | 'asyncValidators') {\n    if (!isUndefined(field['_' + type])) {\n      // Avoid overriding existing validators defined through directive (https://github.com/ngx-formly/ngx-formly/issues/1578)\n      if (field.formControl) {\n        const validator = type === 'validators' ? field.formControl.validator : field.formControl.asyncValidator;\n        if (field['_' + type] !== validator) {\n          field['_' + type] = validator;\n        }\n      }\n\n      return;\n    }\n\n    const validators: ValidatorFn[] = type === 'validators' ? this.getPredefinedFieldValidation(field) : [];\n    if (field[type]) {\n      for (const validatorName in field[type]) {\n        if (validatorName === 'validation' && !Array.isArray(field[type].validation)) {\n          field[type].validation = [field[type].validation];\n          console.warn(`NgxFormly(${field.key}): passing a non array value to the 'validation' is deprecated, pass an array instead`);\n        }\n\n        validatorName === 'validation'\n          ? validators.push(...field[type].validation.map(v => this.wrapNgValidatorFn(field, v)))\n          : validators.push(this.wrapNgValidatorFn(field, field[type][validatorName], validatorName))\n        ;\n      }\n    }\n\n    defineHiddenProp(\n      field,\n      '_' + type,\n      type === 'validators' ? Validators.compose(validators) : Validators.composeAsync(validators as any),\n    );\n  }\n\n  private getPredefinedFieldValidation(field: FormlyFieldConfigCache): ValidatorFn[] {\n    return FORMLY_VALIDATORS\n      .filter(opt => (field.templateOptions && field.templateOptions.hasOwnProperty(opt)) || (field.expressionProperties && field.expressionProperties[`templateOptions.${opt}`]))\n      .map((opt) => (control: AbstractControl) => {\n        const value = field.templateOptions[opt];\n        if (value === false) {\n          return null;\n        }\n        switch (opt) {\n          case 'required':\n            return Validators.required(control);\n          case 'pattern':\n            return Validators.pattern(value)(control);\n          case 'minLength':\n            return Validators.minLength(value)(control);\n          case 'maxLength':\n            return Validators.maxLength(value)(control);\n          case 'min':\n            return Validators.min(value)(control);\n          case 'max':\n            return Validators.max(value)(control);\n        }\n      });\n  }\n\n  private wrapNgValidatorFn(field: FormlyFieldConfigCache, validator: string | FieldValidatorFn, validatorName?: string) {\n    return (control: AbstractControl) => {\n      let validatorFn = validator as FieldValidatorFn;\n      if (typeof validator === 'string') {\n        validatorFn = this.formlyConfig.getValidator(validator).validation;\n      }\n      if (isObject(validator)) {\n        validatorFn = (validator as any).expression;\n      }\n\n      const isValid = validatorFn(control, field);\n      if (validatorName) {\n        if (isPromise(isValid)) {\n          return isValid.then((result: boolean) => {\n            // workaround for https://github.com/angular/angular/issues/13200\n            if (field.options && field.options._markForCheck) {\n              field.options._markForCheck(field);\n            }\n\n            return this.handleResult(field, result, { validatorName, validator });\n          });\n        }\n\n        return this.handleResult(field, isValid, { validatorName, validator });\n      }\n\n      return isValid;\n    };\n  }\n\n  private handleResult(field: FormlyFieldConfigCache, isValid, { validatorName, validator }) {\n    if (isObject(validator) && field.formControl && validator.errorPath) {\n      const control = field.formControl.get(validator.errorPath);\n      if (control) {\n        const controlErrors = (control.errors || {});\n        if (!isValid) {\n          control.setErrors({ ...controlErrors, [validatorName]: { message: validator.message } });\n        } else {\n          delete controlErrors[validatorName];\n          control.setErrors(Object.keys(controlErrors).length === 0 ? null : controlErrors);\n        }\n      }\n\n      return isValid ? null : { [validatorName]: { errorPath: validator.errorPath } };\n    }\n\n    return isValid ? null : { [validatorName]: true };\n  }\n}\n","import { FormlyExtension } from '../../services/formly.config';\nimport { FormlyFieldConfigCache } from '../../components/formly.field.config';\nimport { AbstractControl, FormGroup, FormControl, AbstractControlOptions } from '@angular/forms';\nimport { getKeyPath, getFieldValue, defineHiddenProp } from '../../utils';\nimport { registerControl } from './utils';\n\n/** @experimental */\nexport class FieldFormExtension implements FormlyExtension {\n  onPopulate(field: FormlyFieldConfigCache) {\n    // TODO: add an option to skip extension\n    if (field.fieldArray) {\n      return;\n    }\n\n    if (field.key) {\n      this.addFormControl(field);\n    }\n\n    if (field.parent && field.fieldGroup && !field.key) {\n      defineHiddenProp(field, 'formControl', field.parent.formControl);\n    }\n  }\n\n  private addFormControl(field: FormlyFieldConfigCache) {\n    const controlOptions: AbstractControlOptions = {\n      validators: field._validators,\n      asyncValidators: field._asyncValidators,\n      updateOn: field.modelOptions.updateOn,\n    };\n    let control: AbstractControl;\n\n    const form = field.parent.formControl as FormGroup;\n    const value = getFieldValue(field);\n    const paths = getKeyPath(field);\n    if (field.formControl instanceof AbstractControl || (form && form.get(paths))) {\n      control = field.formControl || form.get(paths);\n      if (\n        (controlOptions.validators !== control.validator)\n        || (controlOptions.asyncValidators !== control.asyncValidator)\n      ) {\n        if (controlOptions.validators !== control.validator) {\n          control.setValidators(controlOptions.validators);\n        }\n        if (controlOptions.asyncValidators !== control.asyncValidator) {\n          control.setAsyncValidators(controlOptions.asyncValidators);\n        }\n        control.updateValueAndValidity();\n      }\n    } else if (field._componentFactory && field._componentFactory.component && field._componentFactory.component.createControl) {\n      const component = field._componentFactory.component;\n      console.warn(`NgxFormly: '${component.name}::createControl' is deprecated since v5.0, use 'prePopulate' hook instead.`);\n      control = component.createControl(value, field);\n    } else if (field.fieldGroup) {\n      // TODO: move to postPopulate\n      control = new FormGroup({}, controlOptions);\n    } else {\n      control = new FormControl(value, controlOptions);\n    }\n\n    registerControl(field, control);\n  }\n}\n","import { FormlyExtension, FormlyConfig, TemplateManipulators } from '../../services/formly.config';\nimport { FormlyFieldConfigCache, FormlyFieldConfig } from '../../components/formly.field.config';\nimport { FormGroup } from '@angular/forms';\nimport { getFieldId, assignModelValue, isUndefined, getFieldValue, reverseDeepMerge, getKeyPath } from '../../utils';\n\n/** @experimental */\nexport class CoreExtension implements FormlyExtension {\n  private formId = 0;\n  constructor(private formlyConfig: FormlyConfig) { }\n\n  prePopulate(field: FormlyFieldConfigCache) {\n    this.getFieldComponentInstance(field).prePopulate();\n    if (field.parent) {\n      return;\n    }\n\n    const fieldTransforms = (field.options && field.options.fieldTransform) || this.formlyConfig.extras.fieldTransform;\n    (Array.isArray(fieldTransforms) ? fieldTransforms : [fieldTransforms]).forEach(fieldTransform => {\n      if (fieldTransform) {\n        console.warn(`NgxFormly: fieldTransform is deprecated since v5.0, use custom extension instead.`);\n        const fieldGroup = fieldTransform(field.fieldGroup, field.model, <FormGroup>field.formControl, field.options);\n        if (!fieldGroup) {\n          throw new Error('fieldTransform must return an array of fields');\n        }\n      }\n    });\n  }\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    this.initFieldOptions(field);\n    this.getFieldComponentInstance(field).onPopulate();\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((f, index) => {\n        Object.defineProperty(f, 'parent', { get: () => field, configurable: true });\n        Object.defineProperty(f, 'index', { get: () => index, configurable: true });\n        this.formId++;\n      });\n    }\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    this.getFieldComponentInstance(field).postPopulate();\n  }\n\n  private initFieldOptions(field: FormlyFieldConfigCache) {\n    const root = <FormlyFieldConfigCache> field.parent;\n    if (!root) {\n      return;\n    }\n\n    Object.defineProperty(field, 'form', { get: () => root.formControl, configurable: true });\n    Object.defineProperty(field, 'options', { get: () => root.options, configurable: true });\n    Object.defineProperty(field, 'model', {\n      get: () => field.key && field.fieldGroup ? getFieldValue(field) : root.model,\n      configurable: true,\n    });\n\n    reverseDeepMerge(field, {\n      id: getFieldId(`formly_${this.formId}`, field, field['index']),\n      hooks: {},\n      modelOptions: {},\n      templateOptions: !field.type || !field.key ? {} : {\n        label: '',\n        placeholder: '',\n        focus: false,\n      },\n    });\n\n    if (field.lifecycle) {\n      console.warn(`NgxFormly: 'lifecycle' is deprecated since v5.0, use 'hooks' instead.`);\n    }\n\n    if (field.template && field.type !== 'formly-template') {\n      if (field.type) {\n        console.warn(`NgxFormly: passing 'type' property is not allowed when 'template' is set.`);\n      }\n      field.type = 'formly-template';\n    }\n\n    if (!field.type && field.fieldGroup) {\n      field.type = 'formly-group';\n    }\n\n    if (field.type) {\n      this.formlyConfig.getMergedField(field);\n    }\n\n    if (!isUndefined(field.defaultValue) && isUndefined(getFieldValue(field))) {\n      assignModelValue(root.model, getKeyPath(field), field.defaultValue);\n    }\n\n    this.initFieldWrappers(field);\n  }\n\n  private initFieldWrappers(field: FormlyFieldConfig) {\n    field.wrappers = field.wrappers || [];\n    const fieldTemplateManipulators: TemplateManipulators = {\n      preWrapper: [],\n      postWrapper: [],\n      ...(field.templateOptions.templateManipulators || {}),\n    };\n\n    field.wrappers = [\n      ...this.formlyConfig.templateManipulators.preWrapper.map(m => m(field)),\n      ...fieldTemplateManipulators.preWrapper.map(m => m(field)),\n      ...field.wrappers,\n      ...this.formlyConfig.templateManipulators.postWrapper.map(m => m(field)),\n      ...fieldTemplateManipulators.postWrapper.map(m => m(field)),\n    ].filter((el, i, a) => el && i === a.indexOf(el));\n  }\n\n  private getFieldComponentInstance(field: FormlyFieldConfigCache) {\n    const componentRef = this.formlyConfig.createComponent(field);\n    const instance: FormlyExtension = componentRef ? componentRef.instance as any : {};\n\n    return {\n      prePopulate: () => instance.prePopulate && instance.prePopulate(field),\n      onPopulate: () => instance.onPopulate && instance.onPopulate(field),\n      postPopulate: () => instance.postPopulate && instance.postPopulate(field),\n    };\n  }\n}\n","import { NgModule, ModuleWithProviders, ANALYZE_FOR_ENTRY_COMPONENTS, Inject, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyForm } from './components/formly.form';\nimport { FormlyField } from './components/formly.field';\nimport { FormlyAttributes } from './components/formly.attributes';\nimport { FormlyConfig, ConfigOption, FORMLY_CONFIG } from './services/formly.config';\nimport { FormlyFormBuilder } from './services/formly.form.builder';\nimport { FormlyGroup } from './templates/formly.group';\nimport { FormlyValidationMessage } from './templates/formly.validation-message';\nimport { FormlyTemplateType } from './templates/field-template.type';\n\nimport { FieldExpressionExtension } from './extensions/field-expression/field-expression';\nimport { FieldValidationExtension } from './extensions/field-validation/field-validation';\nimport { FieldFormExtension } from './extensions/field-form/field-form';\nimport { CoreExtension } from './extensions/core/core';\n\nexport function defaultFormlyConfig(formlyConfig: FormlyConfig): ConfigOption {\n  return {\n    types: [\n      { name: 'formly-group', component: FormlyGroup },\n      { name: 'formly-template', component: FormlyTemplateType },\n    ],\n    extensions: [\n      { name: 'core', extension: new CoreExtension(formlyConfig) },\n      { name: 'field-validation', extension: new FieldValidationExtension(formlyConfig) },\n      { name: 'field-form', extension: new FieldFormExtension() },\n      { name: 'field-expression', extension: new FieldExpressionExtension() },\n    ],\n  };\n}\n\n@NgModule({\n  declarations: [\n    FormlyForm,\n    FormlyField,\n    FormlyAttributes,\n    FormlyGroup,\n    FormlyValidationMessage,\n    FormlyTemplateType,\n  ],\n  entryComponents: [FormlyGroup, FormlyTemplateType],\n  exports: [FormlyForm, FormlyField, FormlyAttributes, FormlyGroup, FormlyValidationMessage],\n  imports: [CommonModule],\n})\nexport class FormlyModule {\n  static forRoot(config: ConfigOption = {}): ModuleWithProviders {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        { provide: FORMLY_CONFIG, multi: true, useFactory: defaultFormlyConfig, deps: [FormlyConfig] },\n        { provide: FORMLY_CONFIG, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true },\n        FormlyConfig,\n        FormlyFormBuilder,\n      ],\n    };\n  }\n\n  static forChild(config: ConfigOption = {}): ModuleWithProviders {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        { provide: FORMLY_CONFIG, useValue: config, multi: true },\n        { provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: config, multi: true },\n        FormlyFormBuilder,\n      ],\n    };\n  }\n\n  constructor(\n    configService: FormlyConfig,\n    @Optional() @Inject(FORMLY_CONFIG) configs: ConfigOption[] = [],\n  ) {\n    if (!configs) {\n      return;\n    }\n\n    configs.forEach(config => configService.addConfig(config));\n  }\n}\n"],"names":["tslib_1.__values","tslib_1.__spread","tslib_1.__extends"],"mappings":"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"}
