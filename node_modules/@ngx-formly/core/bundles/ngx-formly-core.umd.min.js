!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("rxjs/operators"),require("@angular/common"),require("@angular/core"),require("rxjs"),require("@angular/forms")):"function"==typeof define&&define.amd?define("@ngx-formly/core",["exports","rxjs/operators","@angular/common","@angular/core","rxjs","@angular/forms"],t):t((e["ngx-formly"]=e["ngx-formly"]||{},e["ngx-formly"].core={}),e.rxjs.operators,e.ng.common,e.ng.core,e.rxjs,e.ng.forms)}(this,function(e,i,o,s,l,p){"use strict";var r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var o in t)t.hasOwnProperty(o)&&(e[o]=t[o])})(e,t)};function n(e,t){function o(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(o.prototype=t.prototype,new o)}var f=function(){return(f=Object.assign||function(e){for(var t,o=1,r=arguments.length;o<r;o++)for(var n in t=arguments[o])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};function a(e,t){var o="function"==typeof Symbol&&e[Symbol.iterator];if(!o)return e;var r,n,i=o.call(e),s=[];try{for(;(void 0===t||0<t--)&&!(r=i.next()).done;)s.push(r.value)}catch(a){n={error:a}}finally{try{r&&!r.done&&(o=i["return"])&&o.call(i)}finally{if(n)throw n.error}}return s}function u(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(a(arguments[t]));return e}function c(e){if(!e.key)return[];if(!e._keyPath||e._keyPath.key!==e.key){var t=-1===e.key.indexOf("[")?e.key:e.key.replace(/\[(\w+)\]/g,".$1");e._keyPath={key:e.key,path:-1!==t.indexOf(".")?t.split("."):[t]}}return e._keyPath.path.slice(0)}var d=["required","pattern","minLength","maxLength","min","max"];function m(e,t,o){for(var r=0;r<t.length-1;r++){var n=t[r];e[n]&&b(e[n])||(e[n]=/^\d+$/.test(t[r+1])?[]:{}),e=e[n]}e[t[t.length-1]]=C(o)}function h(e){var t,o,r=e.parent.model;try{for(var n=function a(e){var t="function"==typeof Symbol&&e[Symbol.iterator],o=0;return t?t.call(e):{next:function(){return e&&o>=e.length&&(e=void 0),{value:e&&e[o++],done:!e}}}}(c(e)),i=n.next();!i.done;i=n.next()){var s=i.value;if(!r)return r;r=r[s]}}catch(p){t={error:p}}finally{try{i&&!i.done&&(o=n["return"])&&o.call(n)}finally{if(t)throw t.error}}return r}function y(n){for(var e=[],t=1;t<arguments.length;t++)e[t-1]=arguments[t];return e.forEach(function(e){for(var t in e)g(n[t])||""===n[t]?n[t]=C(e[t]):(o=n[t],r=e[t],b(o)&&b(r)&&Object.getPrototypeOf(o)===Object.getPrototypeOf(r)&&!Array.isArray(o)&&!Array.isArray(r)&&y(n[t],e[t]));var o,r}),n}function g(e){return e===undefined||null===e}function v(e){return e===undefined}function b(e){return null!=e&&"object"==typeof e}function C(r){if(!b(r)||r instanceof RegExp||r instanceof l.Observable||r.changingThisBreaksApplicationSecurity)return r;if(r instanceof p.AbstractControl)return null;if(r instanceof Date)return new Date(r.getTime());if(Array.isArray(r))return r.slice(0).map(function(e){return C(e)});var e=Object.getPrototypeOf(r),t=Object.create(e);return t=Object.setPrototypeOf(t,e),Object.keys(r).reduce(function(e,t){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?Object.defineProperty(e,t,f({},o,{get:function(){return C(r[t])}})):e[t]=C(r[t]),e},t)}function F(e,t,o){Object.defineProperty(e,t,{enumerable:!1,writable:!0,configurable:!0}),e[t]=o}function t(e,t,o){var r=e[t];o(r),Object.defineProperty(e,t,{configurable:!0,get:function(){return r},set:function(e){e!==r&&(o(e,r),r=e)}})}var x=new s.InjectionToken("FORMLY_CONFIG"),O=function(){function e(){this.types={},this.validators={},this.wrappers={},this.messages={},this.templateManipulators={preWrapper:[],postWrapper:[]},this.extras={checkExpressionOn:"changeDetectionCheck",showError:function(e){return e.formControl&&e.formControl.invalid&&(e.formControl.touched||e.options.parentForm&&e.options.parentForm.submitted||e.field.validation&&e.field.validation.show)}},this.extensions={}}return e.prototype.addConfig=function(e){var t=this;e.types&&e.types.forEach(function(e){return t.setType(e)}),e.validators&&e.validators.forEach(function(e){return t.setValidator(e)}),e.wrappers&&e.wrappers.forEach(function(e){return t.setWrapper(e)}),e.manipulators&&(console.warn("NgxFormly: passing 'manipulators' config is deprecated, use custom extension instead."),e.manipulators.forEach(function(e){return t.setManipulator(e)})),e.validationMessages&&e.validationMessages.forEach(function(e){return t.addValidatorMessage(e.name,e.message)}),e.extensions&&e.extensions.forEach(function(e){return t.extensions[e.name]=e.extension}),e.extras&&(this.extras=f({},this.extras,e.extras))},e.prototype.setType=function(t){var o=this;Array.isArray(t)?t.forEach(function(e){return o.setType(e)}):(this.types[t.name]||(this.types[t.name]={}),this.types[t.name].component=t.component,this.types[t.name].name=t.name,this.types[t.name]["extends"]=t["extends"],this.types[t.name].defaultOptions=t.defaultOptions,t.wrappers&&t.wrappers.forEach(function(e){return o.setTypeWrapper(t.name,e)}))},e.prototype.getType=function(e){if(!this.types[e])throw new Error('[Formly Error] There is no type by the name of "'+e+'"');return this.mergeExtendedType(e),this.types[e]},e.prototype.getMergedField=function(o){var r=this;void 0===o&&(o={});var e=this.getType(o.type);e.defaultOptions&&y(o,e.defaultOptions);var t=e["extends"]&&this.getType(e["extends"]).defaultOptions;t&&y(o,t),o&&o.optionsTypes&&o.optionsTypes.forEach(function(e){var t=r.getType(e).defaultOptions;t&&y(o,t)});var n=this.createComponent(o);n&&n.instance&&n.instance.defaultOptions&&y(o,n.instance.defaultOptions),!o.wrappers&&e.wrappers&&(o.wrappers=u(e.wrappers))},e.prototype.createComponent=function(e,t,o){if(void 0===e&&(e={}),e.type){var r=e._componentFactory;if(r&&e.type===r.type&&r.componentRef&&r.componentRef.hostView&&!r.componentRef.hostView.destroyed)return e._componentFactory.componentRef;var n=this.getType(e.type);return t||(t=e.parent.options._componentFactoryResolver),o||(o=this.getFieldInjector(e)),F(e,"_componentFactory",{type:e.type,component:n.component,componentRef:t?t.resolveComponentFactory(n.component).create(o):null}),e._componentFactory.componentRef}},e.prototype.setWrapper=function(t){var o=this;(this.wrappers[t.name]=t).types&&t.types.forEach(function(e){o.setTypeWrapper(e,t.name)})},e.prototype.getWrapper=function(e){if(!this.wrappers[e])throw new Error('[Formly Error] There is no wrapper by the name of "'+e+'"');return this.wrappers[e]},e.prototype.setTypeWrapper=function(e,t){this.types[e]||(this.types[e]={}),this.types[e].wrappers||(this.types[e].wrappers=[]),-1===this.types[e].wrappers.indexOf(t)&&this.types[e].wrappers.push(t)},e.prototype.setValidator=function(e){this.validators[e.name]=e},e.prototype.getValidator=function(e){if(!this.validators[e])throw new Error('[Formly Error] There is no validator by the name of "'+e+'"');return this.validators[e]},e.prototype.addValidatorMessage=function(e,t){this.messages[e]=t},e.prototype.getValidatorMessage=function(e){return this.messages[e]},e.prototype.setManipulator=function(e){(new e["class"])[e.method](this)},e.prototype.mergeExtendedType=function(e){if(this.types[e]["extends"]){var t=this.getType(this.types[e]["extends"]);this.types[e].component||(this.types[e].component=t.component),this.types[e].wrappers||(this.types[e].wrappers=t.wrappers)}},e.prototype.getFieldInjector=function(e){void 0===e&&(e={});var t=e.parent;return t._componentFactory&&t._componentFactory.componentRef?t._componentFactory.componentRef.injector:t.options._injector},e.decorators=[{type:s.Injectable,args:[{providedIn:"root"}]}],e.ngInjectableDef=s.defineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),k=function(){function e(e,t,o){this.formlyConfig=e,this.componentFactoryResolver=t,this.injector=o}return e.prototype.buildForm=function(e,t,o,r){if(void 0===t&&(t=[]),!this.formlyConfig.extensions.core)throw new Error("NgxFormly: missing `forRoot()` call. use `forRoot()` when registering the `FormlyModule`.");this._buildForm({fieldGroup:t,model:o,formControl:e,options:this._setOptions(r)})},e.prototype._buildForm=function(t){var o=this;this.getExtensions().forEach(function(e){return e.prePopulate&&e.prePopulate(t)}),this.getExtensions().forEach(function(e){return e.onPopulate&&e.onPopulate(t)}),t.fieldGroup&&t.fieldGroup.forEach(function(e){return o._buildForm(e)}),this.getExtensions().forEach(function(e){return e.postPopulate&&e.postPopulate(t)})},e.prototype.getExtensions=function(){var t=this;return Object.keys(this.formlyConfig.extensions).map(function(e){return t.formlyConfig.extensions[e]})},e.prototype._setOptions=function(t){return(t=t||{}).formState=t.formState||{},t.showError||(t.showError=this.formlyConfig.extras.showError),t.fieldChanges||F(t,"fieldChanges",new l.Subject),t._componentFactoryResolver||F(t,"_componentFactoryResolver",this.componentFactoryResolver),t._injector||F(t,"_injector",this.injector),t._markForCheck||(t._markForCheck=function(e){e._componentRefs&&e._componentRefs.forEach(function(e){return e.changeDetectorRef.markForCheck()}),e.fieldGroup&&e.fieldGroup.forEach(function(e){return t._markForCheck(e)})}),t},e.decorators=[{type:s.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[{type:O},{type:s.ComponentFactoryResolver},{type:s.Injector}]},e.ngInjectableDef=s.defineInjectable({factory:function(){return new e(s.inject(O),s.inject(s.ComponentFactoryResolver),s.inject(s.INJECTOR))},token:e,providedIn:"root"}),e}(),E=function(){function e(e,t,o,r){var n=this;this.formlyBuilder=e,this.formlyConfig=t,this.parentFormGroup=r,this.modelChange=new s.EventEmitter,this.immutable=!1,this.modelChangeSubs=[],this.enableCheckExprDebounce=!1,this.checkExpressionChange$=this.modelChange.pipe(i.debounceTime(this.enableCheckExprDebounce?100:0)).subscribe(function(){n.enableCheckExprDebounce=!0,n.checkExpressionChange(),n.enableCheckExprDebounce=!1}),this.immutable=null!==o||!!t.extras.immutable}return Object.defineProperty(e.prototype,"model",{get:function(){return this._model||{}},set:function(e){this._model=this.immutable?C(e):e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fields",{get:function(){return this._fields||[]},set:function(e){this._fields=this.immutable?C(e):e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"options",{get:function(){return this._options},set:function(e){this._options=this.immutable?C(e):e},enumerable:!0,configurable:!0}),e.prototype.ngDoCheck=function(){"changeDetectionCheck"===this.formlyConfig.extras.checkExpressionOn&&this.checkExpressionChange()},e.prototype.ngOnChanges=function(e){(e.fields||e.form||e.model)&&(this.form=this.form||new p.FormGroup({}),this.setOptions(),this.clearModelSubscriptions(),this.formlyBuilder.buildForm(this.form,this.fields,this.model,this.options),this.trackModelChanges(this.fields),this.options.updateInitialValue())},e.prototype.ngOnDestroy=function(){this.clearModelSubscriptions(),this.checkExpressionChange$.unsubscribe()},e.prototype.changeModel=function(e){m(this.model,e.key.split("."),e.value),this.modelChange.emit(C(this.model))},e.prototype.setOptions=function(){var o=this;this.options||(this.options={}),this.options.resetModel||(this.options.resetModel=function(e){e=g(e)?o.initialModel:e,o.model&&(Object.keys(o.model).forEach(function(e){return delete o.model[e]}),Object.assign(o.model,e||{})),o.options._buildForm(),o.options.parentForm&&o.options.parentForm.control===o.form?o.options.parentForm.resetForm(e):o.form.reset(e)}),!this.options.parentForm&&this.parentFormGroup&&(F(this.options,"parentForm",this.parentFormGroup),t(this.options.parentForm,"submitted",function(e,t){e!==!!t&&o.options._markForCheck({fieldGroup:o.fields,model:o.model,formControl:o.form,options:o.options})})),this.options.updateInitialValue||(this.options.updateInitialValue=function(){return o.initialModel=C(o.model)}),this.options._buildForm||(this.options._buildForm=function(e){void 0===e&&(e=!1),o.clearModelSubscriptions(),o.formlyBuilder.buildForm(o.form,o.fields,o.model,o.options),o.trackModelChanges(o.fields),e&&o.modelChange.emit(C(o.model))})},e.prototype.checkExpressionChange=function(){this.options&&this.options._checkField&&this.options._checkField({fieldGroup:this.fields,model:this.model,formControl:this.form,options:this.options})},e.prototype.trackModelChanges=function(e,o){var r=this;void 0===o&&(o=[]),e.forEach(function(e){if(e.key&&!e.fieldGroup){var t=e.modelOptions.debounce&&e.modelOptions.debounce["default"]?e.formControl.valueChanges.pipe(i.debounceTime(e.modelOptions.debounce["default"])):e.formControl.valueChanges;r.modelChangeSubs.push(t.subscribe(function(t){e.parsers&&0<e.parsers.length&&e.parsers.forEach(function(e){return t=e(t)}),r.changeModel({key:u(o,[e.key]).join("."),value:t})}))}e.fieldGroup&&0<e.fieldGroup.length&&r.trackModelChanges(e.fieldGroup,e.key?u(o,[e.key]):o)})},e.prototype.clearModelSubscriptions=function(){this.modelChangeSubs.forEach(function(e){return e.unsubscribe()}),this.modelChangeSubs=[]},e.decorators=[{type:s.Component,args:[{selector:"formly-form",template:'\n    <formly-field *ngFor="let field of fields"\n      hide-deprecation\n      [form]="field.form"\n      [options]="field.options"\n      [model]="field.model"\n      [field]="field">\n    </formly-field>\n    <ng-content></ng-content>\n  ',providers:[k]}]}],e.ctorParameters=function(){return[{type:k},{type:O},{type:undefined,decorators:[{type:s.Attribute,args:["immutable"]}]},{type:p.FormGroupDirective,decorators:[{type:s.Optional}]}]},e.propDecorators={form:[{type:s.Input}],model:[{type:s.Input}],fields:[{type:s.Input}],options:[{type:s.Input}],modelChange:[{type:s.Output}]},e}(),w=function(){function e(e,t,o,r){this.formlyConfig=e,this.componentFactoryResolver=t,this.injector=o,this.className="",this.warnDeprecation=!1,this.modelChange=new s.EventEmitter,this.refsUnsubscribe=function(){},this.warnDeprecation=null===r}return Object.defineProperty(e.prototype,"model",{set:function(e){this.warnDeprecation&&console.warn("NgxFormly: passing 'model' input to '"+this.constructor.name+"' component is not required anymore, you may remove it!")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"form",{set:function(e){this.warnDeprecation&&console.warn("NgxFormly: passing 'form' input to '"+this.constructor.name+"' component is not required anymore, you may remove it!")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"options",{set:function(e){this.warnDeprecation&&console.warn("NgxFormly: passing 'options' input to '"+this.constructor.name+"' component is not required anymore, you may remove it!")},enumerable:!0,configurable:!0}),e.prototype.ngAfterContentInit=function(){this.triggerHook("afterContentInit")},e.prototype.ngAfterContentChecked=function(){this.triggerHook("afterContentChecked")},e.prototype.ngAfterViewInit=function(){this.triggerHook("afterViewInit")},e.prototype.ngAfterViewChecked=function(){this.triggerHook("afterViewChecked")},e.prototype.ngDoCheck=function(){this.triggerHook("doCheck")},e.prototype.ngOnInit=function(){this.triggerHook("onInit")},e.prototype.ngOnChanges=function(e){e.field&&(this.refsUnsubscribe=this.renderField(this.field,this.containerRef)),this.triggerHook("onChanges",e)},e.prototype.ngOnDestroy=function(){this.triggerHook("onDestroy"),this.refsUnsubscribe()},e.prototype.renderField=function(t,o){var r=this;this.refsUnsubscribe(),(t.wrappers||[]).forEach(function(e){o=r.createWrapperRef(t,o,r.formlyConfig.getWrapper(e))});var e=this.formlyConfig.createComponent(t,this.componentFactoryResolver,this.injector);return e&&(o.insert(e.hostView),this.attachComponentRef(e,t)),function(){(t._componentRefs||[]).forEach(function(e){return e.destroy()}),t._componentRefs=[]}},e.prototype.triggerHook=function(e,t){this.field.hooks&&this.field.hooks[e]&&(t&&!t.field||this.field.hooks[e](this.field)),this.field.lifecycle&&this.field.lifecycle[e]&&this.field.lifecycle[e](this.field.form,this.field,this.field.model,this.field.options)},e.prototype.createWrapperRef=function(e,t,o){var r=e.options&&e.options._componentFactoryResolver?e.options._componentFactoryResolver:this.componentFactoryResolver,n=t.createComponent(r.resolveComponentFactory(o.component));if(this.attachComponentRef(n,e),!n.instance.fieldComponent)throw Error(o.component.prototype.constructor.name+"#fieldComponent: missing 'static' flag for '@ViewChild' query, it should be explicitly defined by '@ViewChild(..., { static: true })'.");return n.instance.fieldComponent},e.prototype.attachComponentRef=function(e,t){t._componentRefs?t._componentRefs.push(e):F(t,"_componentRefs",[e]),Object.assign(e.instance,{field:t})},e.decorators=[{type:s.Component,args:[{selector:"formly-field",template:"<ng-template #container></ng-template>",host:{"[style.display]":'field.hide ? "none":""',"[class]":"field.className? field.className : className"}}]}],e.ctorParameters=function(){return[{type:O},{type:s.ComponentFactoryResolver},{type:s.Injector},{type:undefined,decorators:[{type:s.Attribute,args:["hide-deprecation"]}]}]},e.propDecorators={field:[{type:s.Input}],className:[{type:s.Input,args:["class"]}],model:[{type:s.Input}],form:[{type:s.Input}],options:[{type:s.Input}],modelChange:[{type:s.Output}],containerRef:[{type:s.ViewChild,args:["container",{read:s.ViewContainerRef,"static":!0}]}]},e}(),P=function(){function e(e,t,o){this.renderer=e,this.elementRef=t,this.uiAttributesCache={},this.uiAttributes=u(d,["tabindex","placeholder","readonly","disabled"]),this.document=o}return Object.defineProperty(e.prototype,"to",{get:function(){return this.field.templateOptions||{}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"fieldAttrElements",{get:function(){return this.field&&this.field._attrElements||[]},enumerable:!0,configurable:!0}),e.prototype.ngOnChanges=function(e){var o=this;e.field&&(this.renderer.setAttribute(this.elementRef.nativeElement,"id",this.field.id),this.to&&this.to.attributes&&t(this.to,"attributes",function(t,e){e&&Object.keys(e).forEach(function(e){return o.renderer.removeAttribute(o.elementRef.nativeElement,e)}),t&&Object.keys(t).forEach(function(e){return o.setAttribute(e,t[e])})}),this.attachAttrElement(),1===this.fieldAttrElements.length&&t(this.field,"focus",function(e){var t=o.fieldAttrElements?o.fieldAttrElements[0]:null;t&&o.focusElement(t,e)}))},e.prototype.ngDoCheck=function(){var o=this;this.uiAttributes.forEach(function(e){var t=o.to[e];o.uiAttributesCache[e]!==t&&((o.uiAttributesCache[e]=t)||0===t?o.setAttribute(e,!0===t?e:""+t):o.renderer.removeAttribute(o.elementRef.nativeElement,e))})},e.prototype.ngOnDestroy=function(){this.detachAttrElement()},e.prototype.focusElement=function(e,t){var o=this;if(e.focus){var r=!!this.document.activeElement&&this.fieldAttrElements.some(function(e){return o.document.activeElement===e||e.contains(o.document.activeElement)});t&&!r?e.focus():!t&&r&&e.blur()}},e.prototype.onFocus=function(e){this.field.focus||(this.field.focus=!0),this.to.focus&&this.to.focus(this.field,e)},e.prototype.onBlur=function(e){this.field.focus&&(this.field.focus=!1),this.to.blur&&this.to.blur(this.field,e)},e.prototype.onChange=function(e){this.to.change&&this.to.change(this.field,e),this.field.formControl&&this.field.formControl.markAsDirty()},e.prototype.attachAttrElement=function(){this.field._attrElements?this.field._attrElements.push(this.elementRef.nativeElement):F(this.field,"_attrElements",[this.elementRef.nativeElement])},e.prototype.detachAttrElement=function(){var t=this,e=this.fieldAttrElements.findIndex(function(e){return e!==t.elementRef.nativeElement});-1!==e&&this.field._attrElements.splice(e,1)},e.prototype.setAttribute=function(e,t){this.renderer.setAttribute(this.elementRef.nativeElement,e,t)},e.decorators=[{type:s.Directive,args:[{selector:"[formlyAttributes]",host:{"[attr.name]":"field.name","[attr.step]":"to.step","(focus)":"onFocus($event)","(blur)":"onBlur($event)","(keyup)":"to.keyup && to.keyup(field, $event)","(keydown)":"to.keydown && to.keydown(field, $event)","(click)":"to.click && to.click(field, $event)","(change)":"onChange($event)","(keypress)":"to.keypress && to.keypress(field, $event)"}}]}],e.ctorParameters=function(){return[{type:s.Renderer2},{type:s.ElementRef},{type:undefined,decorators:[{type:s.Inject,args:[o.DOCUMENT]}]}]},e.propDecorators={field:[{type:s.Input,args:["formlyAttributes"]}]},e}(),_=function(){function e(){}return Object.defineProperty(e.prototype,"model",{get:function(){return this.field.model},set:function(e){console.warn("NgxFormly: passing 'model' input to '"+this.constructor.name+"' component is not required anymore, you may remove it!")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"form",{get:function(){return this.field.parent.formControl},set:function(e){console.warn("NgxFormly: passing 'form' input to '"+this.constructor.name+"' component is not required anymore, you may remove it!")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"options",{get:function(){return this.field.options},set:function(e){console.warn("NgxFormly: passing 'options' input to '"+this.constructor.name+"' component is not required anymore, you may remove it!")},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"key",{get:function(){return this.field.key},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"formControl",{get:function(){return this.field.formControl},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"to",{get:function(){return this.field.templateOptions||{}},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"showError",{get:function(){return this.options.showError(this)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"id",{get:function(){return this.field.id},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"formState",{get:function(){return this.options.formState||{}},enumerable:!0,configurable:!0}),e.propDecorators={field:[{type:s.Input}],model:[{type:s.Input}],form:[{type:s.Input}],options:[{type:s.Input}]},e}(),j=function(t){function e(){var e=t.call(this)||this;return console.warn("NgxFormly: 'Field' has been renamed to 'FieldType', extend 'FieldType' instead."),e}return n(e,t),e}(_);function V(t,e){e=e||t.formControl,!t.formControl&&e&&(F(t,"formControl",e),t.templateOptions.disabled&&e.enabled&&e.disable(),delete t.templateOptions.disabled&&Object.defineProperty(t.templateOptions,"disabled",{get:function(){return!t.formControl.enabled},set:function(e){return e?t.formControl.disable():t.formControl.enable()},enumerable:!0,configurable:!0}));var o=t.parent.formControl;if(o){for(var r=c(t),n=0;n<r.length-1;n++){var i=r[n];o.get([i])||V({key:i,formControl:new p.FormGroup({}),parent:{formControl:o}}),o=o.get([i])}var s=h(t);g(e.value)&&g(s)||e.value===s||!(e instanceof p.FormControl)||e.patchValue(s);var a=r[r.length-1];o.get([a])!==e&&o.setControl(a,e)}}var A=function(o){function e(e){var t=o.call(this)||this;return t.defaultOptions={defaultValue:[]},e instanceof k&&console.warn("NgxFormly: passing 'FormlyFormBuilder' to '"+t.constructor.name+"' type is not required anymore, you may remove it!"),t}return n(e,o),e.prototype.onPopulate=function(e){if(e.fieldGroup=e.fieldGroup||[],e.fieldGroup.length>e.model.length)for(var t=e.fieldGroup.length;t>=e.model.length;--t)e.formControl.removeAt(t),e.fieldGroup.splice(t,1);for(t=e.fieldGroup.length;t<e.model.length;t++){var o=f({},C(e.fieldArray),{key:""+t});e.fieldGroup.push(o)}},e.prototype.postPopulate=function(e){e.formControl||V(e,new p.FormArray(e.fieldGroup.map(function(e){return e.formControl}),{validators:e._validators,asyncValidators:e._asyncValidators,updateOn:e.modelOptions.updateOn}))},e.prototype.add=function(e,t){e=g(e)?this.field.fieldGroup.length:e,this.model.splice(e,0,t?C(t):undefined),this.options._buildForm(!0)},e.prototype.remove=function(e){this.model.splice(e,1),this.formControl.removeAt(e),this.field.fieldGroup.splice(e,1),this.field.fieldGroup.forEach(function(e,t){return e.key=""+t}),this.options._buildForm(!0)},e.ctorParameters=function(){return[{type:k,decorators:[{type:s.Inject,args:[x]},{type:s.Optional}]}]},e}(_),R=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n(t,e),t.propDecorators={fieldComponent:[{type:s.ViewChild,args:["fieldComponent",{read:s.ViewContainerRef,"static":!0}]}]},t}(_),I=function(t){function e(){var e=null!==t&&t.apply(this,arguments)||this;return e.defaultOptions={defaultValue:{}},e}return n(e,t),e.decorators=[{type:s.Component,args:[{selector:"formly-group",template:'\n    <formly-field *ngFor="let f of field.fieldGroup" [field]="f"></formly-field>\n    <ng-content></ng-content>\n  ',host:{"[class]":'field.fieldGroupClassName || ""'}}]}],e}(_),G=function(){function e(e){this.formlyConfig=e}return Object.defineProperty(e.prototype,"errorMessage",{get:function(){var e=this.field.formControl;for(var t in e.errors)if(e.errors.hasOwnProperty(t)){var o=this.formlyConfig.getValidatorMessage(t);if(b(e.errors[t])){if(e.errors[t].errorPath)return;e.errors[t].message&&(o=e.errors[t].message)}return this.field.validation&&this.field.validation.messages&&this.field.validation.messages[t]&&(o=this.field.validation.messages[t]),this.field.validators&&this.field.validators[t]&&this.field.validators[t].message&&(o=this.field.validators[t].message),this.field.asyncValidators&&this.field.asyncValidators[t]&&this.field.asyncValidators[t].message&&(o=this.field.asyncValidators[t].message),"function"==typeof o?o(e.errors[t],this.field):o}},enumerable:!0,configurable:!0}),e.decorators=[{type:s.Component,args:[{selector:"formly-validation-message",template:"{{ errorMessage }}"}]}],e.ctorParameters=function(){return[{type:O}]},e.propDecorators={field:[{type:s.Input}]},e}(),M=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n(t,e),t.decorators=[{type:s.Component,args:[{selector:"formly-template",template:'<div [innerHtml]="field.template"></div>'}]}],t}(_);function N(e,t,o){return e instanceof Function?e.apply(t,o):!!e}var T=function(){function e(){}return e.prototype.prePopulate=function(e){var o=this;e.parent||e.options._checkField||(e.options._checkField=function(e,t){return o._checkField(e,t)})},e.prototype.onPopulate=function(a){if(a.parent&&!a._expressionProperties){if(F(a,"_expressionProperties",{}),a.expressionProperties){var e=function(e){var t=a.expressionProperties[e],o=function i(e,t){try{return Function.apply(void 0,u(t,[e+" = expressionValue;"]))}catch(o){console.error(o)}}("field."+e,["expressionValue","model","field"]);if("string"==typeof t||function s(e){return"function"==typeof e}(t))a._expressionProperties[e]={expression:p._evalExpression(t,a.parent.expressionProperties&&a.parent.expressionProperties.hasOwnProperty("templateOptions.disabled")?function(){return a.parent.templateOptions.disabled}:undefined),expressionValueSetter:o},"templateOptions.disabled"===e&&Object.defineProperty(a._expressionProperties[e],"expressionValue",{get:function(){return a.templateOptions.disabled},set:function(){},enumerable:!0,configurable:!0});else if(t instanceof l.Observable){var r=t.subscribe(function(e){return N(o,{field:a},[e,a.model,a])}),n=a.hooks.onDestroy;a.hooks.onDestroy=function(e){n&&n(e),r.unsubscribe()}}},p=this;for(var t in a.expressionProperties)e(t)}if(a.hideExpression){delete a.hide;for(var o=a.parent;o&&!o.hideExpression;)o=o.parent;a.hideExpression=this._evalExpression(a.hideExpression,o&&o.hideExpression?function(){return o.hide}:undefined)}}},e.prototype.postPopulate=function(e){e.parent||e.options._checkField(e,!0)},e.prototype._evalExpression=function(r,n){return"string"==typeof(r=r||function(){return!1})&&(r=function i(e,t){try{return-1!==e.indexOf("this.field")&&console.warn("NgxFormly: using 'this.field' in expressionProperties is deprecated since v5.1, use 'field' instead."),Function.apply(void 0,u(t,["return "+e+";"]))}catch(o){console.error(o)}}(r,["model","formState","field"])),n?function(e,t,o){return n()||r(e,t,o)}:r},e.prototype._checkField=function(e,t){var o=this;void 0===t&&(t=!1);var r=!1;e.fieldGroup.forEach(function(e){o.checkFieldExpressionChange(e,t)&&(r=!0),o.checkFieldVisibilityChange(e,t)&&(r=!0),e.fieldGroup&&0<e.fieldGroup.length&&o._checkField(e,t)}),r&&e.options&&e.options._markForCheck&&e.options._markForCheck(e)},e.prototype.checkFieldExpressionChange=function(e,t){if(!e||!e._expressionProperties)return!1;var o=!1,r=e._expressionProperties,n=d.map(function(e){return"templateOptions."+e});for(var i in r){var s=N(r[i].expression,{field:e},[e.model,e.options.formState,e]);if("templateOptions.disabled"===i&&(s=!!s),t||r[i].expressionValue!==s&&(!b(s)||JSON.stringify(s)!==JSON.stringify(r[i].expressionValue))){if(o=!0,r[i].expressionValue=s,N(r[i].expressionValueSetter,{field:e},[s,e.model,e]),0===i.indexOf("model.")){var a=i.replace(/^model\./,""),p=e.key&&i===a?e.formControl:e.parent.formControl.get(a);!p||g(p.value)&&g(s)||p.value===s||p.patchValue(s)}-1!==n.indexOf(i)&&e.formControl&&e.formControl.updateValueAndValidity({emitEvent:!1})}}return o},e.prototype.checkFieldVisibilityChange=function(e,t){if(!e||g(e.hideExpression))return!1;var o=!!N(e.hideExpression,{field:e},[e.model,e.options.formState,e]),r=!1;return(o!==e.hide||t)&&(r=!0,e.hide=o,e.templateOptions.hidden=o,this.toggleFormControl(e,o)),r},e.prototype.toggleFormControl=function(e,t){var o=this;e.fieldGroup&&e.fieldGroup.filter(function(e){return!e.hideExpression}).forEach(function(e){return o.toggleFormControl(e,t)}),e.formControl&&e.key&&(!0===t&&e.formControl.parent?function n(t){var e=t.formControl.parent;if(e instanceof p.FormArray)-1!==(r=e.controls.findIndex(function(e){return e===t.formControl}))&&(e.removeAt(r),t.formControl.setParent(null));else if(e instanceof p.FormGroup){var o=c(t),r=o[o.length-1];e.get([r])===t.formControl&&e.removeControl(r),t.formControl.setParent(null)}}(e):!1!==t||e.formControl.parent||V(e)),e.options.fieldChanges&&e.options.fieldChanges.next({field:e,type:"hidden",value:t})},e}(),D=function(){function e(e){this.formlyConfig=e}return e.prototype.onPopulate=function(e){e.parent&&e.key&&(this.initFieldValidation(e,"validators"),this.initFieldValidation(e,"asyncValidators"))},e.prototype.initFieldValidation=function(t,e){var o=this;if(v(t["_"+e])){var r="validators"===e?this.getPredefinedFieldValidation(t):[];if(t[e])for(var n in t[e])"validation"!==n||Array.isArray(t[e].validation)||(t[e].validation=[t[e].validation],console.warn("NgxFormly("+t.key+"): passing a non array value to the 'validation' is deprecated, pass an array instead")),"validation"===n?r.push.apply(r,u(t[e].validation.map(function(e){return o.wrapNgValidatorFn(t,e)}))):r.push(this.wrapNgValidatorFn(t,t[e][n],n));F(t,"_"+e,"validators"===e?p.Validators.compose(r):p.Validators.composeAsync(r))}else if(t.formControl){var i="validators"===e?t.formControl.validator:t.formControl.asyncValidator;t["_"+e]!==i&&(t["_"+e]=i)}},e.prototype.getPredefinedFieldValidation=function(r){return d.filter(function(e){return r.templateOptions&&r.templateOptions.hasOwnProperty(e)||r.expressionProperties&&r.expressionProperties["templateOptions."+e]}).map(function(o){return function(e){var t=r.templateOptions[o];if(!1===t)return null;switch(o){case"required":return p.Validators.required(e);case"pattern":return p.Validators.pattern(t)(e);case"minLength":return p.Validators.minLength(t)(e);case"maxLength":return p.Validators.maxLength(t)(e);case"min":return p.Validators.min(t)(e);case"max":return p.Validators.max(t)(e)}}})},e.prototype.wrapNgValidatorFn=function(n,i,s){var a=this;return function(e){var t=i;"string"==typeof i&&(t=a.formlyConfig.getValidator(i).validation),b(i)&&(t=i.expression);var o=t(e,n);return s?function r(e){return!!e&&"function"==typeof e.then}(o)?o.then(function(e){return n.options&&n.options._markForCheck&&n.options._markForCheck(n),a.handleResult(n,e,{validatorName:s,validator:i})}):a.handleResult(n,o,{validatorName:s,validator:i}):o}},e.prototype.handleResult=function(e,t,o){var r,n,i,s=o.validatorName,a=o.validator;if(b(a)&&e.formControl&&a.errorPath){var p=e.formControl.get(a.errorPath);if(p){var l=p.errors||{};t?(delete l[s],p.setErrors(0===Object.keys(l).length?null:l)):p.setErrors(f({},l,((r={})[s]={message:a.message},r)))}return t?null:((n={})[s]={errorPath:a.errorPath},n)}return t?null:((i={})[s]=!0,i)},e}(),S=function(){function e(){}return e.prototype.onPopulate=function(e){e.fieldArray||(e.key&&this.addFormControl(e),e.parent&&e.fieldGroup&&!e.key&&F(e,"formControl",e.parent.formControl))},e.prototype.addFormControl=function(e){var t,o={validators:e._validators,asyncValidators:e._asyncValidators,updateOn:e.modelOptions.updateOn},r=e.parent.formControl,n=h(e),i=c(e);if(e.formControl instanceof p.AbstractControl||r&&r.get(i))t=e.formControl||r.get(i),o.validators===t.validator&&o.asyncValidators===t.asyncValidator||(o.validators!==t.validator&&t.setValidators(o.validators),o.asyncValidators!==t.asyncValidator&&t.setAsyncValidators(o.asyncValidators),t.updateValueAndValidity());else if(e._componentFactory&&e._componentFactory.component&&e._componentFactory.component.createControl){var s=e._componentFactory.component;console.warn("NgxFormly: '"+s.name+"::createControl' is deprecated since v5.0, use 'prePopulate' hook instead."),t=s.createControl(n,e)}else t=e.fieldGroup?new p.FormGroup({},o):new p.FormControl(n,o);V(e,t)},e}(),W=function(){function e(e){this.formlyConfig=e,this.formId=0}return e.prototype.prePopulate=function(t){if(this.getFieldComponentInstance(t).prePopulate(),!t.parent){var e=t.options&&t.options.fieldTransform||this.formlyConfig.extras.fieldTransform;(Array.isArray(e)?e:[e]).forEach(function(e){if(e&&(console.warn("NgxFormly: fieldTransform is deprecated since v5.0, use custom extension instead."),!e(t.fieldGroup,t.model,t.formControl,t.options)))throw new Error("fieldTransform must return an array of fields")})}},e.prototype.onPopulate=function(o){var r=this;this.initFieldOptions(o),this.getFieldComponentInstance(o).onPopulate(),o.fieldGroup&&o.fieldGroup.forEach(function(e,t){Object.defineProperty(e,"parent",{get:function(){return o},configurable:!0}),Object.defineProperty(e,"index",{get:function(){return t},configurable:!0}),r.formId++})},e.prototype.postPopulate=function(e){this.getFieldComponentInstance(e).postPopulate()},e.prototype.initFieldOptions=function(e){var t=e.parent;t&&(Object.defineProperty(e,"form",{get:function(){return t.formControl},configurable:!0}),Object.defineProperty(e,"options",{get:function(){return t.options},configurable:!0}),Object.defineProperty(e,"model",{get:function(){return e.key&&e.fieldGroup?h(e):t.model},configurable:!0}),y(e,{id:function n(e,t,o){if(t.id)return t.id;var r=t.type;return!r&&t.template&&(r="template"),[e,r,t.key,o].join("_")}("formly_"+this.formId,e,e.index),hooks:{},modelOptions:{},templateOptions:e.type&&e.key?{label:"",placeholder:"",focus:!1}:{}}),e.lifecycle&&console.warn("NgxFormly: 'lifecycle' is deprecated since v5.0, use 'hooks' instead."),e.template&&"formly-template"!==e.type&&(e.type&&console.warn("NgxFormly: passing 'type' property is not allowed when 'template' is set."),e.type="formly-template"),!e.type&&e.fieldGroup&&(e.type="formly-group"),e.type&&this.formlyConfig.getMergedField(e),!v(e.defaultValue)&&v(h(e))&&m(t.model,c(e),e.defaultValue),this.initFieldWrappers(e))},e.prototype.initFieldWrappers=function(t){t.wrappers=t.wrappers||[];var e=f({preWrapper:[],postWrapper:[]},t.templateOptions.templateManipulators||{});t.wrappers=u(this.formlyConfig.templateManipulators.preWrapper.map(function(e){return e(t)}),e.preWrapper.map(function(e){return e(t)}),t.wrappers,this.formlyConfig.templateManipulators.postWrapper.map(function(e){return e(t)}),e.postWrapper.map(function(e){return e(t)})).filter(function(e,t,o){return e&&t===o.indexOf(e)})},e.prototype.getFieldComponentInstance=function(e){var t=this.formlyConfig.createComponent(e),o=t?t.instance:{};return{prePopulate:function(){return o.prePopulate&&o.prePopulate(e)},onPopulate:function(){return o.onPopulate&&o.onPopulate(e)},postPopulate:function(){return o.postPopulate&&o.postPopulate(e)}}},e}();function q(e){return{types:[{name:"formly-group",component:I},{name:"formly-template",component:M}],extensions:[{name:"core",extension:new W(e)},{name:"field-validation",extension:new D(e)},{name:"field-form",extension:new S},{name:"field-expression",extension:new T}]}}var H=function(){function t(t,e){void 0===e&&(e=[]),e&&e.forEach(function(e){return t.addConfig(e)})}return t.forRoot=function(e){return void 0===e&&(e={}),{ngModule:t,providers:[{provide:x,multi:!0,useFactory:q,deps:[O]},{provide:x,useValue:e,multi:!0},{provide:s.ANALYZE_FOR_ENTRY_COMPONENTS,useValue:e,multi:!0},O,k]}},t.forChild=function(e){return void 0===e&&(e={}),{ngModule:t,providers:[{provide:x,useValue:e,multi:!0},{provide:s.ANALYZE_FOR_ENTRY_COMPONENTS,useValue:e,multi:!0},k]}},t.decorators=[{type:s.NgModule,args:[{declarations:[E,w,P,I,G,M],entryComponents:[I,M],exports:[E,w,P,I,G],imports:[o.CommonModule]}]}],t.ctorParameters=function(){return[{type:O},{type:Array,decorators:[{type:s.Optional},{type:s.Inject,args:[x]}]}]},t}();e.FormlyForm=E,e.FormlyField=w,e.FormlyAttributes=P,e.FORMLY_CONFIG=x,e.FormlyConfig=O,e.FormlyFormBuilder=k,e.FieldType=_,e.Field=j,e.FieldArrayType=A,e.FieldWrapper=R,e.FormlyModule=H,e.ɵdefineHiddenProp=F,e.ɵreverseDeepMerge=y,e.ɵa=q,e.ɵe=W,e.ɵh=T,e.ɵg=S,e.ɵf=D,e.ɵd=M,e.ɵb=I,e.ɵc=G,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-formly-core.umd.min.js.map