!function(o,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/common"),require("@angular/forms"),require("@angular/core"),require("@ngx-formly/core")):"function"==typeof define&&define.amd?define("@ngx-formly/bootstrap/addons",["exports","@angular/common","@angular/forms","@angular/core","@ngx-formly/core"],t):t((o["ngx-formly"]=o["ngx-formly"]||{},o["ngx-formly"].bootstrap=o["ngx-formly"].bootstrap||{},o["ngx-formly"].bootstrap.addons={}),o.ng.common,o.ng.forms,o.ng.core,o.core$1)}(this,function(o,t,n,e,r){"use strict";var i=function(o,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(o,t){o.__proto__=t}||function(o,t){for(var n in t)t.hasOwnProperty(n)&&(o[n]=t[n])})(o,t)};function a(o,t){var n="function"==typeof Symbol&&o[Symbol.iterator];if(!n)return o;var r,e,i=n.call(o),a=[];try{for(;(void 0===t||0<t--)&&!(r=i.next()).done;)a.push(r.value)}catch(d){e={error:d}}finally{try{r&&!r.done&&(n=i["return"])&&n.call(i)}finally{if(e)throw e.error}}return a}var d=function(o){function t(){return null!==o&&o.apply(this,arguments)||this}return function r(o,t){function n(){this.constructor=o}i(o,t),o.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(t,o),t.prototype.addonRightClick=function(o){this.to.addonRight.onClick&&this.to.addonRight.onClick(this.to,this,o)},t.prototype.addonLeftClick=function(o){this.to.addonLeft.onClick&&this.to.addonLeft.onClick(this.to,this,o)},t.decorators=[{type:e.Component,args:[{selector:"formly-wrapper-addons",template:'<div class="input-group">\n  <div class="input-group-prepend" *ngIf="to.addonLeft" [ngStyle]="{cursor: to.addonLeft.onClick ? \'pointer\' : \'inherit\'}"\n    (click)="addonLeftClick($event)">\n    <i class="input-group-text" [ngClass]="to.addonLeft.class" *ngIf="to.addonLeft.class"></i>\n    <span *ngIf="to.addonLeft.text" class="input-group-text">{{ to.addonLeft.text }}</span>\n  </div>\n  <div class="input-addons">\n    <ng-container #fieldComponent></ng-container>\n  </div>\n  <div class="input-group-append" *ngIf="to.addonRight" [ngStyle]="{cursor: to.addonRight.onClick ? \'pointer\' : \'inherit\'}"\n    (click)="addonRightClick($event)">\n    <i class="input-group-text" [ngClass]="to.addonRight.class" *ngIf="to.addonRight.class"></i>\n    <span *ngIf="to.addonRight.text" class="input-group-text">{{ to.addonRight.text }}</span>\n  </div>\n</div>\n',styles:[":host ::ng-deep .input-group>:not(:first-child) .form-control{border-top-left-radius:0;border-bottom-left-radius:0}:host ::ng-deep .input-group>:not(:last-child) .form-control{border-top-right-radius:0;border-bottom-right-radius:0}:host ::ng-deep .input-group>.input-addons{position:relative;flex:1 1 auto;width:1%;margin-bottom:0}"]}]}],t}(r.FieldWrapper);function s(o){!o.templateOptions||o.wrappers&&-1!==o.wrappers.indexOf("addons")||(o.templateOptions.addonLeft||o.templateOptions.addonRight)&&(o.wrappers=function n(){for(var o=[],t=0;t<arguments.length;t++)o=o.concat(a(arguments[t]));return o}(o.wrappers||[],["addons"]))}var p=function(){function o(){}return o.decorators=[{type:e.NgModule,args:[{declarations:[d],imports:[t.CommonModule,n.ReactiveFormsModule,r.FormlyModule.forChild({wrappers:[{name:"addons",component:d}],extensions:[{name:"addons",extension:{postPopulate:s}}]})]}]}],o}();o.FormlyBootstrapAddonsModule=p,o.ɵb=s,o.ɵa=d,Object.defineProperty(o,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-formly-bootstrap-addons.umd.min.js.map